{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\stories\\\\Node.stories.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// YourComponent.stories.js\nimport React from 'react';\nimport { Node } from './Node'; //👇 This default export determines where your story goes in the story list\n\nexport default {\n  title: 'Node',\n  component: Node\n}; //👇 We create a “template” of how args map to rendering\n\nconst Template = args => _jsxDEV(Node, _objectSpread({}, args), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 28\n}, this);\n\nexport const FirstStory = Template.bind({});\nFirstStory.args = {\n  label: 'baz',\n  size: small\n  /*👇 The args you need here will depend on your component */\n\n};","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/stories/Node.stories.js"],"names":["React","Node","title","component","Template","args","FirstStory","bind","label","size","small"],"mappings":";;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,QAArB,C,CAEA;;AACA,eAAe;AACbC,EAAAA,KAAK,EAAE,MADM;AAEbC,EAAAA,SAAS,EAAEF;AAFE,CAAf,C,CAKA;;AACA,MAAMG,QAAQ,GAAIC,IAAD,IAAU,QAAC,IAAD,oBAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,QAA3B;;AAEA,OAAO,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAnB;AAEPD,UAAU,CAACD,IAAX,GAAkB;AACdG,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,IAAI,EAAEC;AACR;;AAHgB,CAAlB","sourcesContent":["// YourComponent.stories.js\r\n\r\nimport React from 'react';\r\n\r\nimport { Node } from './Node';\r\n\r\n//👇 This default export determines where your story goes in the story list\r\nexport default {\r\n  title: 'Node',\r\n  component: Node,\r\n};\r\n\r\n//👇 We create a “template” of how args map to rendering\r\nconst Template = (args) => <Node {...args} />;\r\n\r\nexport const FirstStory = Template.bind({});\r\n\r\nFirstStory.args = {\r\n    label: 'baz',\r\n    size: small\r\n  /*👇 The args you need here will depend on your component */\r\n};\r\n"]},"metadata":{},"sourceType":"module"}