{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\stories\\\\LeftNav.stories.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport LeftNav from './LeftNav';\nexport default {\n  title: 'LeftNav',\n  component: LeftNav\n};\n\nconst Template = args => _jsxDEV(LeftNav, _objectSpread({}, args), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 28\n}, this);\n\nexport const DummyNav = Template.bind({});\nDummyNav.args = {\n  pages: [{\n    name: 'About',\n    url: '/about',\n    title: 'What is SSZ'\n  }, {\n    name: 'Specs',\n    url: '/eth2specs/ssz/simple-serialize',\n    title: 'SSZ Technical Specifications'\n  }, {\n    name: 'Implementation',\n    url: '/implementation',\n    title: 'SSZ Implementation List'\n  }, {\n    name: 'Merkle Proofs',\n    url: '/eth2specs/ssz/merkle-proofs',\n    title: 'Merkle Proof Formats'\n  }, {\n    name: 'Demonstration',\n    url: '/demo',\n    title: 'Playground'\n  }, {\n    name: 'Tree',\n    url: '/tree',\n    title: \"Tree\"\n  }]\n};","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/stories/LeftNav.stories.js"],"names":["React","LeftNav","title","component","Template","args","DummyNav","bind","pages","name","url"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE,SADI;AAEXC,EAAAA,SAAS,EAAEF;AAFA,CAAf;;AAKA,MAAMG,QAAQ,GAAIC,IAAD,IAAU,QAAC,OAAD,oBAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,QAA3B;;AAEA,OAAO,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAjB;AACPD,QAAQ,CAACD,IAAT,GAAgB;AACZG,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,GAAG,EAAE,QAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GADG,EAMH;AACIO,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,GAAG,EAAE,iCAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GANG,EAWH;AACIO,IAAAA,IAAI,EAAE,gBADV;AAEIC,IAAAA,GAAG,EAAE,iBAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GAXG,EAgBH;AACIO,IAAAA,IAAI,EAAE,eADV;AAEIC,IAAAA,GAAG,EAAE,8BAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GAhBG,EAqBH;AACIO,IAAAA,IAAI,EAAE,eADV;AAEIC,IAAAA,GAAG,EAAE,OAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GArBG,EA0BH;AACIO,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,GAAG,EAAE,OAFT;AAGIR,IAAAA,KAAK,EAAE;AAHX,GA1BG;AADK,CAAhB","sourcesContent":["import React from 'react';\r\nimport LeftNav from './LeftNav';\r\n\r\nexport default {\r\n    title: 'LeftNav',\r\n    component: LeftNav,\r\n};\r\n\r\nconst Template = (args) => <LeftNav {...args} />;\r\n\r\nexport const DummyNav = Template.bind({});\r\nDummyNav.args = {\r\n    pages: [\r\n        {\r\n            name: 'About',\r\n            url: '/about',\r\n            title: 'What is SSZ'\r\n        },\r\n        {\r\n            name: 'Specs',\r\n            url: '/eth2specs/ssz/simple-serialize',\r\n            title: 'SSZ Technical Specifications'\r\n        },\r\n        {\r\n            name: 'Implementation',\r\n            url: '/implementation',\r\n            title: 'SSZ Implementation List'\r\n        },\r\n        {\r\n            name: 'Merkle Proofs',\r\n            url: '/eth2specs/ssz/merkle-proofs',\r\n            title: 'Merkle Proof Formats'\r\n        },\r\n        {\r\n            name: 'Demonstration',\r\n            url: '/demo',\r\n            title: 'Playground'\r\n        },\r\n        {\r\n            name: 'Tree',\r\n            url: '/tree',\r\n            title: \"Tree\"\r\n        }\r\n        \r\n        ] \r\n};"]},"metadata":{},"sourceType":"module"}