{"ast":null,"code":"import _defineProperty from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\stories\\\\Node.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport './Node.module.css';\nimport PropTypes from 'prop-types';\nexport default function Node(_ref) {\n  _s();\n\n  var label = _ref.label,\n      backgroundColor = _ref.backgroundColor,\n      props = _objectWithoutProperties(_ref, [\"label\", \"backgroundColor\"]);\n\n  var _useState = useState(false),\n      on = _useState[0],\n      setOn = _useState[1];\n\n  var lit = on ? 'on' : 'off';\n  var size = props.size == 'small' ? 'small' : 'large';\n  return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({}, props), {}, {\n    className: \"node node-\".concat(size, \" node-\").concat(lit),\n    style: backgroundColor && {\n      backgroundColor: backgroundColor\n    },\n    onClick: function onClick() {\n      return !on ? setOn(true) : setOn(false);\n    },\n    children: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Node, \"rmWVTCF/YbjkE1EvnMh1+AUooDY=\");\n\n_c = Node;\nNode.defaultProps = {\n  label: \"Foobarbaz\",\n  backgroundColor: null,\n  size: 'small'\n};\nNode.propTypes = {\n  /**\r\n  * What does the Button say?\r\n  */\n  label: PropTypes.string,\n\n  /**\r\n  * What background color to use\r\n  */\n  backgroundColor: PropTypes.string,\n\n  /**\r\n  * Is the Button big or small?\r\n  */\n  size: PropTypes.oneOf(['small', 'large'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/stories/Node.jsx"],"names":["React","useState","PropTypes","Node","label","backgroundColor","props","on","setOn","lit","size","defaultProps","propTypes","string","oneOf"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,eAAe,SAASC,IAAT,OAAoD;AAAA;;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,eAA6B,QAA7BA,eAA6B;AAAA,MAATC,KAAS;;AAAA,kBAC1CL,QAAQ,CAAC,KAAD,CADkC;AAAA,MACvDM,EADuD;AAAA,MACnDC,KADmD;;AAE/D,MAAIC,GAAG,GAAGF,EAAE,GAAG,IAAH,GAAU,KAAtB;AAEA,MAAMG,IAAI,GAAGJ,KAAK,CAACI,IAAN,IAAc,OAAd,GAAwB,OAAxB,GAAkC,OAA/C;AACA,sBACI,kDACQJ,KADR;AAEI,IAAA,SAAS,sBAAeI,IAAf,mBAA4BD,GAA5B,CAFb;AAGI,IAAA,KAAK,EAAEJ,eAAe,IAAI;AAACA,MAAAA,eAAe,EAAfA;AAAD,KAH9B;AAII,IAAA,OAAO,EAAE;AAAA,aAAM,CAACE,EAAD,GAAMC,KAAK,CAAC,IAAD,CAAX,GAAoBA,KAAK,CAAC,KAAD,CAA/B;AAAA,KAJb;AAAA,cAMKJ;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAfuBD,I;;KAAAA,I;AAkBxBA,IAAI,CAACQ,YAAL,GAAoB;AAChBP,EAAAA,KAAK,EAAE,WADS;AAEhBC,EAAAA,eAAe,EAAE,IAFD;AAGhBK,EAAAA,IAAI,EAAE;AAHU,CAApB;AAMAP,IAAI,CAACS,SAAL,GAAiB;AACb;AACJ;AACA;AACIR,EAAAA,KAAK,EAAEF,SAAS,CAACW,MAJJ;;AAKb;AACJ;AACA;AACIR,EAAAA,eAAe,EAAEH,SAAS,CAACW,MARd;;AASb;AACJ;AACA;AACIH,EAAAA,IAAI,EAAER,SAAS,CAACY,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB;AAZO,CAAjB","sourcesContent":["import React, { useState } from 'react';\r\nimport './Node.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Node( {label, backgroundColor, ...props} ) {\r\n    const [ on, setOn] = useState(false);\r\n    let lit = on ? 'on' : 'off';\r\n    \r\n    const size = props.size == 'small' ? 'small' : 'large';\r\n    return (\r\n        <button\r\n            {...props}\r\n            className={`node node-${size} node-${lit}`}\r\n            style={backgroundColor && {backgroundColor}}\r\n            onClick={() => !on ? setOn(true) : setOn(false)}\r\n        >\r\n            {label}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nNode.defaultProps = {\r\n    label: \"Foobarbaz\",\r\n    backgroundColor: null,\r\n    size: 'small'\r\n};\r\n\r\nNode.propTypes = {\r\n    /**\r\n   * What does the Button say?\r\n   */\r\n    label: PropTypes.string,\r\n    /**\r\n   * What background color to use\r\n   */\r\n    backgroundColor: PropTypes.string,\r\n    /**\r\n   * Is the Button big or small?\r\n   */\r\n    size: PropTypes.oneOf(['small', 'large']),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}