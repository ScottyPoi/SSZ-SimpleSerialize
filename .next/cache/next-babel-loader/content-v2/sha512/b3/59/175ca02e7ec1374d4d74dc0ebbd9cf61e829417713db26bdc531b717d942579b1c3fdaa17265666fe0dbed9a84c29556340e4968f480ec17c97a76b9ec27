{"ast":null,"code":"import _defineProperty from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\pages\\\\spec.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport remark2react from 'remark-react';\nimport Specs from '../stories/specs';\nimport { SpecsStory } from '../stories/specs.stories';\n\nvar markdown = function markdown() {\n  return _jsxDEV(Specs, _objectSpread({}, SpecsStory.args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, _this);\n};\n\nvar content = unified().use(parse).use(remark2react).processSync(markdown).result;\nexport default function Spec() {\n  return content.toString();\n}\n_c = Spec;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spec\");","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/pages/spec.js"],"names":["React","unified","parse","remark2react","Specs","SpecsStory","markdown","args","content","use","processSync","result","Spec","toString"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SACE,QAAC,KAAD,oBAAWD,UAAU,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA,WADF;AAGH,CAJD;;AAMA,IAAMC,OAAO,GAAGP,OAAO,GAClBQ,GADW,CACPP,KADO,EAEXO,GAFW,CAEPN,YAFO,EAGXO,WAHW,CAGCJ,QAHD,EAGWK,MAH3B;AAKA,eAAe,SAASC,IAAT,GAAgB;AAC7B,SAAOJ,OAAO,CAACK,QAAR,EAAP;AACD;KAFuBD,I;AAEvB","sourcesContent":["import React from 'react'\r\nimport unified from 'unified';\r\nimport parse from 'remark-parse';\r\nimport remark2react from 'remark-react';\r\nimport Specs from '../stories/specs';\r\nimport { SpecsStory } from '../stories/specs.stories';\r\n\r\nconst markdown = () => {\r\n    return (\r\n      <Specs {...SpecsStory.args} />\r\n    )\r\n};\r\n\r\nconst content = unified()\r\n    .use(parse)\r\n    .use(remark2react)\r\n    .processSync(markdown).result;\r\n\r\nexport default function Spec() {\r\n  return content.toString()\r\n};\r\n"]},"metadata":{},"sourceType":"module"}