(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9171],{42898:function(e,t,r){"use strict";var n=r(34155);Object.defineProperty(t,"__esModule",{value:!0}),t.setActivePreset=function(e){t.ACTIVE_PRESET=h=c(e);const r=l[h];t.MAX_COMMITTEES_PER_SLOT=_=r.MAX_COMMITTEES_PER_SLOT,t.TARGET_COMMITTEE_SIZE=T=r.TARGET_COMMITTEE_SIZE,t.MAX_VALIDATORS_PER_COMMITTEE=d=r.MAX_VALIDATORS_PER_COMMITTEE,t.SHUFFLE_ROUND_COUNT=y=r.SHUFFLE_ROUND_COUNT,t.HYSTERESIS_QUOTIENT=p=r.HYSTERESIS_QUOTIENT,t.HYSTERESIS_DOWNWARD_MULTIPLIER=f=r.HYSTERESIS_DOWNWARD_MULTIPLIER,t.HYSTERESIS_UPWARD_MULTIPLIER=g=r.HYSTERESIS_UPWARD_MULTIPLIER,t.SAFE_SLOTS_TO_UPDATE_JUSTIFIED=E=r.SAFE_SLOTS_TO_UPDATE_JUSTIFIED,t.MIN_DEPOSIT_AMOUNT=O=r.MIN_DEPOSIT_AMOUNT,t.MAX_EFFECTIVE_BALANCE=I=r.MAX_EFFECTIVE_BALANCE,t.EFFECTIVE_BALANCE_INCREMENT=S=r.EFFECTIVE_BALANCE_INCREMENT,t.MIN_ATTESTATION_INCLUSION_DELAY=A=r.MIN_ATTESTATION_INCLUSION_DELAY,t.SLOTS_PER_EPOCH=L=r.SLOTS_PER_EPOCH,t.MIN_SEED_LOOKAHEAD=P=r.MIN_SEED_LOOKAHEAD,t.MAX_SEED_LOOKAHEAD=N=r.MAX_SEED_LOOKAHEAD,t.EPOCHS_PER_ETH1_VOTING_PERIOD=m=r.EPOCHS_PER_ETH1_VOTING_PERIOD,t.SLOTS_PER_HISTORICAL_ROOT=R=r.SLOTS_PER_HISTORICAL_ROOT,t.MIN_EPOCHS_TO_INACTIVITY_PENALTY=b=r.MIN_EPOCHS_TO_INACTIVITY_PENALTY,t.EPOCHS_PER_HISTORICAL_VECTOR=C=r.EPOCHS_PER_HISTORICAL_VECTOR,t.EPOCHS_PER_SLASHINGS_VECTOR=B=r.EPOCHS_PER_SLASHINGS_VECTOR,t.HISTORICAL_ROOTS_LIMIT=M=r.HISTORICAL_ROOTS_LIMIT,t.VALIDATOR_REGISTRY_LIMIT=w=r.VALIDATOR_REGISTRY_LIMIT,t.BASE_REWARD_FACTOR=v=r.BASE_REWARD_FACTOR,t.WHISTLEBLOWER_REWARD_QUOTIENT=D=r.WHISTLEBLOWER_REWARD_QUOTIENT,t.PROPOSER_REWARD_QUOTIENT=V=r.PROPOSER_REWARD_QUOTIENT,t.INACTIVITY_PENALTY_QUOTIENT=U=r.INACTIVITY_PENALTY_QUOTIENT,t.MIN_SLASHING_PENALTY_QUOTIENT=k=r.MIN_SLASHING_PENALTY_QUOTIENT,t.PROPORTIONAL_SLASHING_MULTIPLIER=z=r.PROPORTIONAL_SLASHING_MULTIPLIER,t.MAX_PROPOSER_SLASHINGS=x=r.MAX_PROPOSER_SLASHINGS,t.MAX_ATTESTER_SLASHINGS=H=r.MAX_ATTESTER_SLASHINGS,t.MAX_ATTESTATIONS=j=r.MAX_ATTESTATIONS,t.MAX_DEPOSITS=F=r.MAX_DEPOSITS,t.MAX_VOLUNTARY_EXITS=G=r.MAX_VOLUNTARY_EXITS,t.SYNC_COMMITTEE_SIZE=Y=r.SYNC_COMMITTEE_SIZE,t.EPOCHS_PER_SYNC_COMMITTEE_PERIOD=X=r.EPOCHS_PER_SYNC_COMMITTEE_PERIOD,t.INACTIVITY_PENALTY_QUOTIENT_ALTAIR=W=r.INACTIVITY_PENALTY_QUOTIENT_ALTAIR,t.MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR=J=r.MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR,t.PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR=$=r.PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR},t.PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR=t.MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR=t.INACTIVITY_PENALTY_QUOTIENT_ALTAIR=t.EPOCHS_PER_SYNC_COMMITTEE_PERIOD=t.SYNC_COMMITTEE_SIZE=t.MAX_VOLUNTARY_EXITS=t.MAX_DEPOSITS=t.MAX_ATTESTATIONS=t.MAX_ATTESTER_SLASHINGS=t.MAX_PROPOSER_SLASHINGS=t.PROPORTIONAL_SLASHING_MULTIPLIER=t.MIN_SLASHING_PENALTY_QUOTIENT=t.INACTIVITY_PENALTY_QUOTIENT=t.PROPOSER_REWARD_QUOTIENT=t.WHISTLEBLOWER_REWARD_QUOTIENT=t.BASE_REWARD_FACTOR=t.VALIDATOR_REGISTRY_LIMIT=t.HISTORICAL_ROOTS_LIMIT=t.EPOCHS_PER_SLASHINGS_VECTOR=t.EPOCHS_PER_HISTORICAL_VECTOR=t.MIN_EPOCHS_TO_INACTIVITY_PENALTY=t.SLOTS_PER_HISTORICAL_ROOT=t.EPOCHS_PER_ETH1_VOTING_PERIOD=t.MAX_SEED_LOOKAHEAD=t.MIN_SEED_LOOKAHEAD=t.SLOTS_PER_EPOCH=t.MIN_ATTESTATION_INCLUSION_DELAY=t.EFFECTIVE_BALANCE_INCREMENT=t.MAX_EFFECTIVE_BALANCE=t.MIN_DEPOSIT_AMOUNT=t.SAFE_SLOTS_TO_UPDATE_JUSTIFIED=t.HYSTERESIS_UPWARD_MULTIPLIER=t.HYSTERESIS_DOWNWARD_MULTIPLIER=t.HYSTERESIS_QUOTIENT=t.SHUFFLE_ROUND_COUNT=t.MAX_VALIDATORS_PER_COMMITTEE=t.TARGET_COMMITTEE_SIZE=t.MAX_COMMITTEES_PER_SLOT=t.ACTIVE_PRESET=void 0;var s,i,o=r(82750),a=r(18953),u=r(15559);const l={[o.PresetName.mainnet]:a.preset,[o.PresetName.minimal]:u.preset};function c(e){var t;return null!==(t=o.PresetName[e])&&void 0!==t?t:o.PresetName.mainnet}let h=c(null===(s=n)||void 0===n||null===(i=s.env)||void 0===i?void 0:i.LODESTAR_PRESET);t.ACTIVE_PRESET=h;let{MAX_COMMITTEES_PER_SLOT:_,TARGET_COMMITTEE_SIZE:T,MAX_VALIDATORS_PER_COMMITTEE:d,SHUFFLE_ROUND_COUNT:y,HYSTERESIS_QUOTIENT:p,HYSTERESIS_DOWNWARD_MULTIPLIER:f,HYSTERESIS_UPWARD_MULTIPLIER:g,SAFE_SLOTS_TO_UPDATE_JUSTIFIED:E,MIN_DEPOSIT_AMOUNT:O,MAX_EFFECTIVE_BALANCE:I,EFFECTIVE_BALANCE_INCREMENT:S,MIN_ATTESTATION_INCLUSION_DELAY:A,SLOTS_PER_EPOCH:L,MIN_SEED_LOOKAHEAD:P,MAX_SEED_LOOKAHEAD:N,EPOCHS_PER_ETH1_VOTING_PERIOD:m,SLOTS_PER_HISTORICAL_ROOT:R,MIN_EPOCHS_TO_INACTIVITY_PENALTY:b,EPOCHS_PER_HISTORICAL_VECTOR:C,EPOCHS_PER_SLASHINGS_VECTOR:B,HISTORICAL_ROOTS_LIMIT:M,VALIDATOR_REGISTRY_LIMIT:w,BASE_REWARD_FACTOR:v,WHISTLEBLOWER_REWARD_QUOTIENT:D,PROPOSER_REWARD_QUOTIENT:V,INACTIVITY_PENALTY_QUOTIENT:U,MIN_SLASHING_PENALTY_QUOTIENT:k,PROPORTIONAL_SLASHING_MULTIPLIER:z,MAX_PROPOSER_SLASHINGS:x,MAX_ATTESTER_SLASHINGS:H,MAX_ATTESTATIONS:j,MAX_DEPOSITS:F,MAX_VOLUNTARY_EXITS:G,SYNC_COMMITTEE_SIZE:Y,EPOCHS_PER_SYNC_COMMITTEE_PERIOD:X,INACTIVITY_PENALTY_QUOTIENT_ALTAIR:W,MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR:J,PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR:$}=l[h];t.PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR=$,t.MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR=J,t.INACTIVITY_PENALTY_QUOTIENT_ALTAIR=W,t.EPOCHS_PER_SYNC_COMMITTEE_PERIOD=X,t.SYNC_COMMITTEE_SIZE=Y,t.MAX_VOLUNTARY_EXITS=G,t.MAX_DEPOSITS=F,t.MAX_ATTESTATIONS=j,t.MAX_ATTESTER_SLASHINGS=H,t.MAX_PROPOSER_SLASHINGS=x,t.PROPORTIONAL_SLASHING_MULTIPLIER=z,t.MIN_SLASHING_PENALTY_QUOTIENT=k,t.INACTIVITY_PENALTY_QUOTIENT=U,t.PROPOSER_REWARD_QUOTIENT=V,t.WHISTLEBLOWER_REWARD_QUOTIENT=D,t.BASE_REWARD_FACTOR=v,t.VALIDATOR_REGISTRY_LIMIT=w,t.HISTORICAL_ROOTS_LIMIT=M,t.EPOCHS_PER_SLASHINGS_VECTOR=B,t.EPOCHS_PER_HISTORICAL_VECTOR=C,t.MIN_EPOCHS_TO_INACTIVITY_PENALTY=b,t.SLOTS_PER_HISTORICAL_ROOT=R,t.EPOCHS_PER_ETH1_VOTING_PERIOD=m,t.MAX_SEED_LOOKAHEAD=N,t.MIN_SEED_LOOKAHEAD=P,t.SLOTS_PER_EPOCH=L,t.MIN_ATTESTATION_INCLUSION_DELAY=A,t.EFFECTIVE_BALANCE_INCREMENT=S,t.MAX_EFFECTIVE_BALANCE=I,t.MIN_DEPOSIT_AMOUNT=O,t.SAFE_SLOTS_TO_UPDATE_JUSTIFIED=E,t.HYSTERESIS_UPWARD_MULTIPLIER=g,t.HYSTERESIS_DOWNWARD_MULTIPLIER=f,t.HYSTERESIS_QUOTIENT=p,t.SHUFFLE_ROUND_COUNT=y,t.MAX_VALIDATORS_PER_COMMITTEE=d,t.TARGET_COMMITTEE_SIZE=T,t.MAX_COMMITTEES_PER_SLOT=_},56269:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NEXT_SYNC_COMMITTEE_INDEX_FLOORLOG2=t.NEXT_SYNC_COMMITTEE_INDEX=t.FINALIZED_ROOT_INDEX_FLOORLOG2=t.FINALIZED_ROOT_INDEX=t.MIN_SYNC_COMMITTEE_PARTICIPANTS=t.MAX_REQUEST_BLOCKS=t.SYNC_COMMITTEE_SUBNET_COUNT=t.TARGET_AGGREGATORS_PER_SYNC_SUBCOMMITTEE=t.ATTESTATION_SUBNET_COUNT=t.EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION=t.RANDOM_SUBNETS_PER_VALIDATOR=t.TARGET_AGGREGATORS_PER_COMMITTEE=t.PARTICIPATION_FLAG_WEIGHTS=t.WEIGHT_DENOMINATOR=t.PROPOSER_WEIGHT=t.SYNC_REWARD_WEIGHT=t.TIMELY_HEAD_WEIGHT=t.TIMELY_TARGET_WEIGHT=t.TIMELY_SOURCE_WEIGHT=t.TIMELY_HEAD_FLAG_INDEX=t.TIMELY_TARGET_FLAG_INDEX=t.TIMELY_SOURCE_FLAG_INDEX=t.DOMAIN_CONTRIBUTION_AND_PROOF=t.DOMAIN_SYNC_COMMITTEE_SELECTION_PROOF=t.DOMAIN_SYNC_COMMITTEE=t.DOMAIN_AGGREGATE_AND_PROOF=t.DOMAIN_SELECTION_PROOF=t.DOMAIN_VOLUNTARY_EXIT=t.DOMAIN_DEPOSIT=t.DOMAIN_RANDAO=t.DOMAIN_BEACON_ATTESTER=t.DOMAIN_BEACON_PROPOSER=t.ETH1_ADDRESS_WITHDRAWAL_PREFIX=t.BLS_WITHDRAWAL_PREFIX=t.JUSTIFICATION_BITS_LENGTH=t.DEPOSIT_CONTRACT_TREE_DEPTH=t.BASE_REWARDS_PER_EPOCH=t.FAR_FUTURE_EPOCH=t.GENESIS_EPOCH=t.GENESIS_SLOT=void 0;t.GENESIS_SLOT=0;t.GENESIS_EPOCH=0;t.FAR_FUTURE_EPOCH=Infinity;t.BASE_REWARDS_PER_EPOCH=4;t.DEPOSIT_CONTRACT_TREE_DEPTH=32;t.JUSTIFICATION_BITS_LENGTH=4;const r=Uint8Array.from([0]);t.BLS_WITHDRAWAL_PREFIX=r;const n=Uint8Array.from([0]);t.ETH1_ADDRESS_WITHDRAWAL_PREFIX=n;const s=Uint8Array.from([0,0,0,0]);t.DOMAIN_BEACON_PROPOSER=s;const i=Uint8Array.from([1,0,0,0]);t.DOMAIN_BEACON_ATTESTER=i;const o=Uint8Array.from([2,0,0,0]);t.DOMAIN_RANDAO=o;const a=Uint8Array.from([3,0,0,0]);t.DOMAIN_DEPOSIT=a;const u=Uint8Array.from([4,0,0,0]);t.DOMAIN_VOLUNTARY_EXIT=u;const l=Uint8Array.from([5,0,0,0]);t.DOMAIN_SELECTION_PROOF=l;const c=Uint8Array.from([6,0,0,0]);t.DOMAIN_AGGREGATE_AND_PROOF=c;const h=Uint8Array.from([7,0,0,0]);t.DOMAIN_SYNC_COMMITTEE=h;const _=Uint8Array.from([8,0,0,0]);t.DOMAIN_SYNC_COMMITTEE_SELECTION_PROOF=_;const T=Uint8Array.from([9,0,0,0]);t.DOMAIN_CONTRIBUTION_AND_PROOF=T;t.TIMELY_SOURCE_FLAG_INDEX=0;t.TIMELY_TARGET_FLAG_INDEX=1;t.TIMELY_HEAD_FLAG_INDEX=2;const d=BigInt(14);t.TIMELY_SOURCE_WEIGHT=d;const y=BigInt(26);t.TIMELY_TARGET_WEIGHT=y;const p=BigInt(14);t.TIMELY_HEAD_WEIGHT=p;const f=BigInt(2);t.SYNC_REWARD_WEIGHT=f;const g=BigInt(8);t.PROPOSER_WEIGHT=g;const E=BigInt(64);t.WEIGHT_DENOMINATOR=E;const O=[d,y,p];t.PARTICIPATION_FLAG_WEIGHTS=O;t.TARGET_AGGREGATORS_PER_COMMITTEE=16;t.RANDOM_SUBNETS_PER_VALIDATOR=1;t.EPOCHS_PER_RANDOM_SUBNET_SUBSCRIPTION=256;t.ATTESTATION_SUBNET_COUNT=64;t.TARGET_AGGREGATORS_PER_SYNC_SUBCOMMITTEE=4;t.SYNC_COMMITTEE_SUBNET_COUNT=4;t.MAX_REQUEST_BLOCKS=1024;t.MIN_SYNC_COMMITTEE_PARTICIPANTS=1;t.FINALIZED_ROOT_INDEX=105;t.FINALIZED_ROOT_INDEX_FLOORLOG2=6;t.NEXT_SYNC_COMMITTEE_INDEX=55;t.NEXT_SYNC_COMMITTEE_INDEX_FLOORLOG2=5},27754:function(e,t){"use strict";let r;Object.defineProperty(t,"__esModule",{value:!0}),t.ForkName=void 0,t.ForkName=r,function(e){e.phase0="phase0",e.altair="altair"}(r||(t.ForkName=r={}))},8364:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(56269);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(82750);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(42898);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=r(27754);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}))},23928:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2300);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(62166);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}))},2300:function(){},62166:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AltairPreset=void 0;var n=r(25874);const s=new n.NumberUintType({byteLength:8}),i=new n.BigIntUintType({byteLength:8}),o=new n.ContainerType({fields:{SYNC_COMMITTEE_SIZE:s,EPOCHS_PER_SYNC_COMMITTEE_PERIOD:s,INACTIVITY_PENALTY_QUOTIENT_ALTAIR:i,MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR:i,PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR:i}});t.AltairPreset=o},82750:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(32748);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(92260);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(63139);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=r(99944);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var a=r(23928);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}))},92260:function(){},99944:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(67558);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(25239);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}))},67558:function(){},25239:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Phase0Preset=void 0;var n=r(25874);const s=new n.NumberUintType({byteLength:8}),i=new n.BigIntUintType({byteLength:8}),o=new n.ContainerType({fields:{MAX_COMMITTEES_PER_SLOT:s,TARGET_COMMITTEE_SIZE:s,MAX_VALIDATORS_PER_COMMITTEE:s,SHUFFLE_ROUND_COUNT:s,HYSTERESIS_QUOTIENT:s,HYSTERESIS_DOWNWARD_MULTIPLIER:s,HYSTERESIS_UPWARD_MULTIPLIER:s,SAFE_SLOTS_TO_UPDATE_JUSTIFIED:s,MIN_DEPOSIT_AMOUNT:i,MAX_EFFECTIVE_BALANCE:i,EFFECTIVE_BALANCE_INCREMENT:i,MIN_ATTESTATION_INCLUSION_DELAY:s,SLOTS_PER_EPOCH:s,MIN_SEED_LOOKAHEAD:s,MAX_SEED_LOOKAHEAD:s,EPOCHS_PER_ETH1_VOTING_PERIOD:s,SLOTS_PER_HISTORICAL_ROOT:s,MIN_EPOCHS_TO_INACTIVITY_PENALTY:s,EPOCHS_PER_HISTORICAL_VECTOR:s,EPOCHS_PER_SLASHINGS_VECTOR:s,HISTORICAL_ROOTS_LIMIT:s,VALIDATOR_REGISTRY_LIMIT:s,BASE_REWARD_FACTOR:i,WHISTLEBLOWER_REWARD_QUOTIENT:i,PROPOSER_REWARD_QUOTIENT:i,INACTIVITY_PENALTY_QUOTIENT:i,MIN_SLASHING_PENALTY_QUOTIENT:i,PROPORTIONAL_SLASHING_MULTIPLIER:i,MAX_PROPOSER_SLASHINGS:s,MAX_ATTESTER_SLASHINGS:s,MAX_ATTESTATIONS:s,MAX_DEPOSITS:s,MAX_VOLUNTARY_EXITS:s}});t.Phase0Preset=o},32748:function(e,t){"use strict";let r;Object.defineProperty(t,"__esModule",{value:!0}),t.PresetName=void 0,t.PresetName=r,function(e){e.mainnet="mainnet",e.minimal="minimal"}(r||(t.PresetName=r={}))},63139:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BeaconPreset=void 0;var n=r(25874),s=r(99944),i=r(23928);function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){u(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const l=new n.ContainerType({fields:a(a({},s.Phase0Preset.fields),i.AltairPreset.fields)});t.BeaconPreset=l},76004:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.altair=void 0;const r={SYNC_COMMITTEE_SIZE:512,EPOCHS_PER_SYNC_COMMITTEE_PERIOD:256,INACTIVITY_PENALTY_QUOTIENT_ALTAIR:BigInt(50331648),MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR:BigInt(64),PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR:BigInt(2)};t.altair=r},18953:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.preset=t.commit=void 0;var n=r(49519),s=r(76004);function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}t.commit="v1.1.0-alpha.7";const u=o(o({},n.phase0),s.altair);t.preset=u},49519:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.phase0=void 0;const r={MAX_COMMITTEES_PER_SLOT:64,TARGET_COMMITTEE_SIZE:128,MAX_VALIDATORS_PER_COMMITTEE:2048,SHUFFLE_ROUND_COUNT:90,HYSTERESIS_QUOTIENT:4,HYSTERESIS_DOWNWARD_MULTIPLIER:1,HYSTERESIS_UPWARD_MULTIPLIER:5,SAFE_SLOTS_TO_UPDATE_JUSTIFIED:8,MIN_DEPOSIT_AMOUNT:BigInt(1e9),MAX_EFFECTIVE_BALANCE:BigInt(32e9),EFFECTIVE_BALANCE_INCREMENT:BigInt(1e9),MIN_ATTESTATION_INCLUSION_DELAY:1,SLOTS_PER_EPOCH:32,MIN_SEED_LOOKAHEAD:1,MAX_SEED_LOOKAHEAD:4,EPOCHS_PER_ETH1_VOTING_PERIOD:64,SLOTS_PER_HISTORICAL_ROOT:8192,MIN_EPOCHS_TO_INACTIVITY_PENALTY:4,EPOCHS_PER_HISTORICAL_VECTOR:65536,EPOCHS_PER_SLASHINGS_VECTOR:8192,HISTORICAL_ROOTS_LIMIT:16777216,VALIDATOR_REGISTRY_LIMIT:1099511627776,BASE_REWARD_FACTOR:BigInt(64),WHISTLEBLOWER_REWARD_QUOTIENT:BigInt(512),PROPOSER_REWARD_QUOTIENT:BigInt(8),INACTIVITY_PENALTY_QUOTIENT:BigInt(67108864),MIN_SLASHING_PENALTY_QUOTIENT:BigInt(128),PROPORTIONAL_SLASHING_MULTIPLIER:BigInt(1),MAX_PROPOSER_SLASHINGS:16,MAX_ATTESTER_SLASHINGS:2,MAX_ATTESTATIONS:128,MAX_DEPOSITS:16,MAX_VOLUNTARY_EXITS:16};t.phase0=r},3690:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.altair=void 0;const r={SYNC_COMMITTEE_SIZE:32,EPOCHS_PER_SYNC_COMMITTEE_PERIOD:8,INACTIVITY_PENALTY_QUOTIENT_ALTAIR:BigInt(50331648),MIN_SLASHING_PENALTY_QUOTIENT_ALTAIR:BigInt(64),PROPORTIONAL_SLASHING_MULTIPLIER_ALTAIR:BigInt(2)};t.altair=r},15559:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.preset=t.commit=void 0;var n=r(16570),s=r(3690);function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}t.commit="v1.1.0-alpha.7";const u=o(o({},n.phase0),s.altair);t.preset=u},16570:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.phase0=void 0;const r={MAX_COMMITTEES_PER_SLOT:4,TARGET_COMMITTEE_SIZE:4,MAX_VALIDATORS_PER_COMMITTEE:2048,SHUFFLE_ROUND_COUNT:10,HYSTERESIS_QUOTIENT:4,HYSTERESIS_DOWNWARD_MULTIPLIER:1,HYSTERESIS_UPWARD_MULTIPLIER:5,SAFE_SLOTS_TO_UPDATE_JUSTIFIED:2,MIN_DEPOSIT_AMOUNT:BigInt(1e9),MAX_EFFECTIVE_BALANCE:BigInt(32e9),EFFECTIVE_BALANCE_INCREMENT:BigInt(1e9),MIN_ATTESTATION_INCLUSION_DELAY:1,SLOTS_PER_EPOCH:8,MIN_SEED_LOOKAHEAD:1,MAX_SEED_LOOKAHEAD:4,EPOCHS_PER_ETH1_VOTING_PERIOD:4,SLOTS_PER_HISTORICAL_ROOT:64,MIN_EPOCHS_TO_INACTIVITY_PENALTY:4,EPOCHS_PER_HISTORICAL_VECTOR:64,EPOCHS_PER_SLASHINGS_VECTOR:64,HISTORICAL_ROOTS_LIMIT:16777216,VALIDATOR_REGISTRY_LIMIT:1099511627776,BASE_REWARD_FACTOR:BigInt(64),WHISTLEBLOWER_REWARD_QUOTIENT:BigInt(512),PROPOSER_REWARD_QUOTIENT:BigInt(8),INACTIVITY_PENALTY_QUOTIENT:BigInt(33554432),MIN_SLASHING_PENALTY_QUOTIENT:BigInt(64),PROPORTIONAL_SLASHING_MULTIPLIER:BigInt(2),MAX_PROPOSER_SLASHINGS:16,MAX_ATTESTER_SLASHINGS:2,MAX_ATTESTATIONS:128,MAX_DEPOSITS:16,MAX_VOLUNTARY_EXITS:16};t.phase0=r},4610:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StringType=void 0;var n=r(25874);class s extends n.BasicType{struct_getSerializedLength(e){throw new Error("unsupported ssz operation")}struct_convertToJson(e){return e}struct_convertFromJson(e){return e}struct_assertValidValue(e){throw new Error("unsupported ssz operation")}serialize(){throw new Error("unsupported ssz type for serialization")}struct_serializeToBytes(){throw new Error("unsupported ssz type for serialization")}struct_deserializeFromBytes(){throw new Error("unsupported ssz operation")}struct_defaultValue(){return"something"}}t.StringType=s},80981:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ssz=t.ts=void 0;var n=o(r(77156));t.ts=n;var s=o(r(61232));function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=n?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,t&&t.set(e,r),r}t.ssz=s},61232:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allForks=void 0;var n=r(46605),s=r(68623);const i={phase0:{BeaconBlockBody:n.ssz.BeaconBlockBody,BeaconBlock:n.ssz.BeaconBlock,SignedBeaconBlock:n.ssz.SignedBeaconBlock,BeaconState:n.ssz.BeaconState,Metadata:n.ssz.Metadata},altair:{BeaconBlockBody:s.ssz.BeaconBlockBody,BeaconBlock:s.ssz.BeaconBlock,SignedBeaconBlock:s.ssz.SignedBeaconBlock,BeaconState:s.ssz.BeaconState,Metadata:s.ssz.Metadata}};t.allForks=i},77156:function(){},68623:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ssz=t.ts=void 0;var n=o(r(66530));t.ts=n;var s=o(r(22581));function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=n?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,t&&t.set(e,r),r}t.ssz=s},22581:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LightClientStore=t.LightClientUpdate=t.LightClientSnapshot=t.BeaconState=t.SignedBeaconBlock=t.BeaconBlock=t.BeaconBlockBody=t.HistoricalBatch=t.HistoricalStateRoots=t.HistoricalBlockRoots=t.SyncAggregate=t.SyncCommitteeBits=t.SyncAggregatorSelectionData=t.SignedContributionAndProof=t.ContributionAndProof=t.SyncCommitteeContribution=t.SyncCommitteeMessage=t.SyncCommittee=t.Metadata=t.SyncSubnets=void 0;var n=r(8364),s=r(25874),i=r(46605),o=r(86498),a=r(9430);function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const{Bytes32:h,Number64:_,Uint64:T,Slot:d,SubCommitteeIndex:y,ValidatorIndex:p,Gwei:f,Root:g,Version:E,BLSPubkey:O,BLSSignature:I,ParticipationFlags:S}=o.ssz,A=new a.LazyVariable,L=new s.BitVectorType({length:n.SYNC_COMMITTEE_SUBNET_COUNT});t.SyncSubnets=L;const P=new s.ContainerType({fields:{seqNumber:T,attnets:i.ssz.AttestationSubnets,syncnets:L}});t.Metadata=P;const N=new s.ContainerType({fields:{pubkeys:new s.VectorType({elementType:O,length:n.SYNC_COMMITTEE_SIZE}),aggregatePubkey:O}});t.SyncCommittee=N;const m=new s.ContainerType({fields:{slot:d,beaconBlockRoot:g,validatorIndex:p,signature:I}});t.SyncCommitteeMessage=m;const R=new s.ContainerType({fields:{slot:d,beaconBlockRoot:g,subCommitteeIndex:y,aggregationBits:new s.BitVectorType({length:n.SYNC_COMMITTEE_SIZE/n.SYNC_COMMITTEE_SUBNET_COUNT}),signature:I}});t.SyncCommitteeContribution=R;const b=new s.ContainerType({fields:{aggregatorIndex:p,contribution:R,selectionProof:I}});t.ContributionAndProof=b;const C=new s.ContainerType({fields:{message:b,signature:I}});t.SignedContributionAndProof=C;const B=new s.ContainerType({fields:{slot:d,subCommitteeIndex:y}});t.SyncAggregatorSelectionData=B;const M=new s.BitVectorType({length:n.SYNC_COMMITTEE_SIZE});t.SyncCommitteeBits=M;const w=new s.ContainerType({fields:{syncCommitteeBits:M,syncCommitteeSignature:I}});t.SyncAggregate=w;const v=new s.VectorType({elementType:new s.RootType({expandedType:()=>A.get().BeaconBlock}),length:n.SLOTS_PER_HISTORICAL_ROOT});t.HistoricalBlockRoots=v;const D=new s.VectorType({elementType:new s.RootType({expandedType:()=>A.get().BeaconState}),length:n.SLOTS_PER_HISTORICAL_ROOT});t.HistoricalStateRoots=D;const V=new s.ContainerType({fields:{blockRoots:v,stateRoots:D}});t.HistoricalBatch=V;const U=new s.ContainerType({fields:l(l({},i.ssz.BeaconBlockBody.fields),{},{syncAggregate:w})});t.BeaconBlockBody=U;const k=new s.ContainerType({fields:{slot:d,proposerIndex:p,parentRoot:new s.RootType({expandedType:()=>A.get().BeaconBlock}),stateRoot:new s.RootType({expandedType:()=>A.get().BeaconState}),body:U}});t.BeaconBlock=k;const z=new s.ContainerType({fields:{message:k,signature:I}});t.SignedBeaconBlock=z;const x=new s.ContainerType({fields:{genesisTime:_,genesisValidatorsRoot:g,slot:d,fork:i.ssz.Fork,latestBlockHeader:i.ssz.BeaconBlockHeader,blockRoots:v,stateRoots:D,historicalRoots:new s.ListType({elementType:new s.RootType({expandedType:V}),limit:n.HISTORICAL_ROOTS_LIMIT}),eth1Data:i.ssz.Eth1Data,eth1DataVotes:new s.ListType({elementType:i.ssz.Eth1Data,limit:n.EPOCHS_PER_ETH1_VOTING_PERIOD*n.SLOTS_PER_EPOCH}),eth1DepositIndex:_,validators:new s.ListType({elementType:i.ssz.Validator,limit:n.VALIDATOR_REGISTRY_LIMIT}),balances:new s.ListType({elementType:f,limit:n.VALIDATOR_REGISTRY_LIMIT}),randaoMixes:new s.VectorType({elementType:h,length:n.EPOCHS_PER_HISTORICAL_VECTOR}),slashings:new s.VectorType({elementType:f,length:n.EPOCHS_PER_SLASHINGS_VECTOR}),previousEpochParticipation:new s.ListType({elementType:S,limit:n.VALIDATOR_REGISTRY_LIMIT}),currentEpochParticipation:new s.ListType({elementType:S,limit:n.VALIDATOR_REGISTRY_LIMIT}),justificationBits:new s.BitVectorType({length:n.JUSTIFICATION_BITS_LENGTH}),previousJustifiedCheckpoint:i.ssz.Checkpoint,currentJustifiedCheckpoint:i.ssz.Checkpoint,finalizedCheckpoint:i.ssz.Checkpoint,inactivityScores:new s.ListType({elementType:_,limit:n.VALIDATOR_REGISTRY_LIMIT}),currentSyncCommittee:N,nextSyncCommittee:N}});t.BeaconState=x;const H=new s.ContainerType({fields:{header:i.ssz.BeaconBlockHeader,nextSyncCommittee:N,currentSyncCommittee:N}});t.LightClientSnapshot=H;const j=new s.ContainerType({fields:{header:i.ssz.BeaconBlockHeader,nextSyncCommittee:N,nextSyncCommitteeBranch:new s.VectorType({elementType:h,length:n.NEXT_SYNC_COMMITTEE_INDEX_FLOORLOG2}),finalityHeader:i.ssz.BeaconBlockHeader,finalityBranch:new s.VectorType({elementType:h,length:n.FINALIZED_ROOT_INDEX_FLOORLOG2}),syncCommitteeBits:new s.BitVectorType({length:n.SYNC_COMMITTEE_SIZE}),syncCommitteeSignature:I,forkVersion:E}});t.LightClientUpdate=j;const F=new s.ContainerType({fields:{snapshot:H,validUpdates:new s.ListType({elementType:j,limit:n.EPOCHS_PER_SYNC_COMMITTEE_PERIOD*n.SLOTS_PER_EPOCH})}});t.LightClientStore=F,A.set({BeaconBlock:k,BeaconState:x})},16956:function(){},75924:function(){},66530:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(88555);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(75924);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(16956);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=r(25501);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var a=r(75493);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var u=r(80573);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var l=r(30127);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var c=r(40254);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var h=r(89894);Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}))},88555:function(){},40254:function(){},99171:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={ssz:!0};t.ssz=void 0;var s=r(23687);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var i=n?Object.getOwnPropertyDescriptor(e,s):null;i&&(i.get||i.set)?Object.defineProperty(r,s,i):r[s]=e[s]}r.default=e,t&&t.set(e,r);return r}(r(79590));t.ssz=i;var o=r(4610);function a(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}))},46605:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ssz=t.ts=void 0;var n=o(r(44058));t.ts=n;var s=o(r(61134));function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=n?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,t&&t.set(e,r),r}t.ssz=s},61134:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SlashingProtectionAttestationLowerBound=t.SlashingProtectionAttestation=t.SlashingProtectionBlock=t.Genesis=t.BeaconBlocksByRootRequest=t.BeaconBlocksByRangeRequest=t.Metadata=t.Ping=t.Goodbye=t.Status=t.SignedAggregateAndProof=t.AggregateAndProof=t.CommitteeAssignment=t.BeaconState=t.EpochAttestations=t.SignedBeaconBlock=t.BeaconBlock=t.BeaconBlockBody=t.SignedVoluntaryExit=t.VoluntaryExit=t.ProposerSlashing=t.Deposit=t.AttesterSlashing=t.Attestation=t.SigningData=t.PendingAttestation=t.IndexedAttestation=t.AttestationData=t.Validator=t.HistoricalBatch=t.HistoricalStateRoots=t.HistoricalBlockRoots=t.ENRForkID=t.ForkData=t.Fork=t.Eth1DataOrdered=t.Eth1Data=t.DepositEvent=t.DepositDataRootList=t.DepositData=t.DepositMessage=t.CommitteeIndices=t.CommitteeBits=t.Checkpoint=t.SignedBeaconBlockHeader=t.BeaconBlockHeader=t.AttestationSubnets=void 0;var n=r(8364),s=r(25874),i=r(86498),o=r(9430);const{Boolean:a,Bytes32:u,Number64:l,Uint64:c,Slot:h,Epoch:_,CommitteeIndex:T,ValidatorIndex:d,Gwei:y,Root:p,Version:f,ForkDigest:g,BLSPubkey:E,BLSSignature:O,Domain:I}=i.ssz,S=new o.LazyVariable,A=new s.BitVectorType({length:n.ATTESTATION_SUBNET_COUNT});t.AttestationSubnets=A;const L=new s.ContainerType({fields:{slot:h,proposerIndex:d,parentRoot:p,stateRoot:p,bodyRoot:p}});t.BeaconBlockHeader=L;const P=new s.ContainerType({fields:{message:L,signature:O}});t.SignedBeaconBlockHeader=P;const N=new s.ContainerType({fields:{epoch:_,root:p}});t.Checkpoint=N;const m=new s.BitListType({limit:n.MAX_VALIDATORS_PER_COMMITTEE});t.CommitteeBits=m;const R=new s.ListType({elementType:d,limit:n.MAX_VALIDATORS_PER_COMMITTEE});t.CommitteeIndices=R;const b=new s.ContainerType({fields:{pubkey:E,withdrawalCredentials:u,amount:y}});t.DepositMessage=b;const C=new s.ContainerType({fields:{pubkey:E,withdrawalCredentials:u,amount:y,signature:O}});t.DepositData=C;const B=new s.ListType({elementType:new s.RootType({expandedType:C}),limit:2**n.DEPOSIT_CONTRACT_TREE_DEPTH});t.DepositDataRootList=B;const M=new s.ContainerType({fields:{depositData:C,blockNumber:l,index:l}});t.DepositEvent=M;const w=new s.ContainerType({fields:{depositRoot:p,depositCount:l,blockHash:u}});t.Eth1Data=w;const v=new s.ContainerType({fields:{depositRoot:p,depositCount:l,blockHash:u,blockNumber:l}});t.Eth1DataOrdered=v;const D=new s.ContainerType({fields:{previousVersion:f,currentVersion:f,epoch:_}});t.Fork=D;const V=new s.ContainerType({fields:{currentVersion:f,genesisValidatorsRoot:p}});t.ForkData=V;const U=new s.ContainerType({fields:{forkDigest:g,nextForkVersion:f,nextForkEpoch:_}});t.ENRForkID=U;const k=new s.VectorType({elementType:new s.RootType({expandedType:()=>S.get().BeaconBlock}),length:n.SLOTS_PER_HISTORICAL_ROOT});t.HistoricalBlockRoots=k;const z=new s.VectorType({elementType:new s.RootType({expandedType:()=>S.get().BeaconState}),length:n.SLOTS_PER_HISTORICAL_ROOT});t.HistoricalStateRoots=z;const x=new s.ContainerType({fields:{blockRoots:k,stateRoots:z}});t.HistoricalBatch=x;const H=new s.ContainerType({fields:{pubkey:E,withdrawalCredentials:u,effectiveBalance:y,slashed:a,activationEligibilityEpoch:_,activationEpoch:_,exitEpoch:_,withdrawableEpoch:_}});t.Validator=H;const j=new s.ContainerType({fields:{slot:h,index:T,beaconBlockRoot:p,source:N,target:N}});t.AttestationData=j;const F=new s.ContainerType({fields:{attestingIndices:R,data:j,signature:O}});t.IndexedAttestation=F;const G=new s.ContainerType({fields:{aggregationBits:m,data:j,inclusionDelay:h,proposerIndex:d}});t.PendingAttestation=G;const Y=new s.ContainerType({fields:{objectRoot:p,domain:I}});t.SigningData=Y;const X=new s.ContainerType({fields:{aggregationBits:m,data:j,signature:O}});t.Attestation=X;const W=new s.ContainerType({fields:{attestation1:F,attestation2:F}});t.AttesterSlashing=W;const J=new s.ContainerType({fields:{proof:new s.VectorType({elementType:u,length:n.DEPOSIT_CONTRACT_TREE_DEPTH+1}),data:C}});t.Deposit=J;const $=new s.ContainerType({fields:{signedHeader1:P,signedHeader2:P}});t.ProposerSlashing=$;const Q=new s.ContainerType({fields:{epoch:_,validatorIndex:d}});t.VoluntaryExit=Q;const q=new s.ContainerType({fields:{message:Q,signature:O}});t.SignedVoluntaryExit=q;const K=new s.ContainerType({fields:{randaoReveal:O,eth1Data:w,graffiti:u,proposerSlashings:new s.ListType({elementType:$,limit:n.MAX_PROPOSER_SLASHINGS}),attesterSlashings:new s.ListType({elementType:W,limit:n.MAX_ATTESTER_SLASHINGS}),attestations:new s.ListType({elementType:X,limit:n.MAX_ATTESTATIONS}),deposits:new s.ListType({elementType:J,limit:n.MAX_DEPOSITS}),voluntaryExits:new s.ListType({elementType:q,limit:n.MAX_VOLUNTARY_EXITS})}});t.BeaconBlockBody=K;const Z=new s.ContainerType({fields:{slot:h,proposerIndex:d,parentRoot:new s.RootType({expandedType:()=>S.get().BeaconBlock}),stateRoot:new s.RootType({expandedType:()=>S.get().BeaconState}),body:K}});t.BeaconBlock=Z;const ee=new s.ContainerType({fields:{message:Z,signature:O}});t.SignedBeaconBlock=ee;const te=new s.ListType({elementType:G,limit:n.MAX_ATTESTATIONS*n.SLOTS_PER_EPOCH});t.EpochAttestations=te;const re=new s.ContainerType({fields:{genesisTime:l,genesisValidatorsRoot:p,slot:h,fork:D,latestBlockHeader:L,blockRoots:k,stateRoots:z,historicalRoots:new s.ListType({elementType:new s.RootType({expandedType:x}),limit:n.HISTORICAL_ROOTS_LIMIT}),eth1Data:w,eth1DataVotes:new s.ListType({elementType:w,limit:n.EPOCHS_PER_ETH1_VOTING_PERIOD*n.SLOTS_PER_EPOCH}),eth1DepositIndex:l,validators:new s.ListType({elementType:H,limit:n.VALIDATOR_REGISTRY_LIMIT}),balances:new s.ListType({elementType:y,limit:n.VALIDATOR_REGISTRY_LIMIT}),randaoMixes:new s.VectorType({elementType:u,length:n.EPOCHS_PER_HISTORICAL_VECTOR}),slashings:new s.VectorType({elementType:y,length:n.EPOCHS_PER_SLASHINGS_VECTOR}),previousEpochAttestations:te,currentEpochAttestations:te,justificationBits:new s.BitVectorType({length:n.JUSTIFICATION_BITS_LENGTH}),previousJustifiedCheckpoint:N,currentJustifiedCheckpoint:N,finalizedCheckpoint:N}});t.BeaconState=re;const ne=new s.ContainerType({fields:{validators:R,committeeIndex:T,slot:h}});t.CommitteeAssignment=ne;const se=new s.ContainerType({fields:{aggregatorIndex:d,aggregate:X,selectionProof:O}});t.AggregateAndProof=se;const ie=new s.ContainerType({fields:{message:se,signature:O}});t.SignedAggregateAndProof=ie;const oe=new s.ContainerType({fields:{forkDigest:g,finalizedRoot:p,finalizedEpoch:_,headRoot:p,headSlot:h}});t.Status=oe;const ae=c;t.Goodbye=ae;const ue=c;t.Ping=ue;const le=new s.ContainerType({fields:{seqNumber:c,attnets:A}});t.Metadata=le;const ce=new s.ContainerType({fields:{startSlot:h,count:l,step:l}});t.BeaconBlocksByRangeRequest=ce;const he=new s.ListType({elementType:p,limit:n.MAX_REQUEST_BLOCKS});t.BeaconBlocksByRootRequest=he;const _e=new s.ContainerType({fields:{genesisValidatorsRoot:p,genesisTime:c,genesisForkVersion:f}});t.Genesis=_e;const Te=new s.ContainerType({fields:{slot:h,signingRoot:p}});t.SlashingProtectionBlock=Te;const de=new s.ContainerType({fields:{sourceEpoch:_,targetEpoch:_,signingRoot:p}});t.SlashingProtectionAttestation=de;const ye=new s.ContainerType({fields:{minSourceEpoch:_,minTargetEpoch:_}});t.SlashingProtectionAttestationLowerBound=ye,S.set({BeaconBlock:Z,BeaconState:re})},89894:function(){},26330:function(){},44058:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(75493);Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===n[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=r(80573);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(26330);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=r(63033);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var a=r(30127);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var u=r(8166);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var l=r(89894);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var c=r(25501);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}))},75493:function(){},80573:function(){},63033:function(){},30127:function(){},8166:function(){},86498:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ssz=t.ts=void 0;var n=o(r(25501));t.ts=n;var s=o(r(18167));function i(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=n?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,t&&t.set(e,r),r}t.ssz=s},18167:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ParticipationFlags=t.Domain=t.BLSSignature=t.BLSPubkey=t.ForkDigest=t.DomainType=t.Version=t.Root=t.Gwei=t.ValidatorIndex=t.SubCommitteeIndex=t.CommitteeIndex=t.Epoch=t.Slot=t.Uint256=t.Uint128=t.Uint64=t.Number64=t.Uint32=t.Uint16=t.Uint8=t.Bytes96=t.Bytes48=t.Bytes32=t.Bytes8=t.Bytes4=t.Boolean=void 0;var n=r(25874);const s=n.booleanType;t.Boolean=s;const i=new n.ByteVectorType({length:4});t.Bytes4=i;const o=new n.ByteVectorType({length:8});t.Bytes8=o;const a=new n.ByteVectorType({length:32});t.Bytes32=a;const u=new n.ByteVectorType({length:48});t.Bytes48=u;const l=new n.ByteVectorType({length:96});t.Bytes96=l;const c=n.byteType;t.Uint8=c;const h=new n.NumberUintType({byteLength:2});t.Uint16=h;const _=n.number32Type;t.Uint32=_;const T=new n.NumberUintType({byteLength:8});t.Number64=T;const d=new n.BigIntUintType({byteLength:8});t.Uint64=d;const y=new n.BigIntUintType({byteLength:16});t.Uint128=y;const p=new n.BigIntUintType({byteLength:32});t.Uint256=p;const f=T;t.Slot=f;const g=T;t.Epoch=g;const E=T;t.CommitteeIndex=E;const O=T;t.SubCommitteeIndex=O;const I=T;t.ValidatorIndex=I;const S=d;t.Gwei=S;const A=new n.RootType({expandedType:()=>{throw new Error("Generic Root type has no expanded type")}});t.Root=A;const L=i;t.Version=L;const P=i;t.DomainType=P;const N=i;t.ForkDigest=N;const m=u;t.BLSPubkey=m;const R=l;t.BLSSignature=R;const b=a;t.Domain=b;const C=c;t.ParticipationFlags=C},25501:function(){},79590:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={allForks:!0,phase0:!0,altair:!0};Object.defineProperty(t,"phase0",{enumerable:!0,get:function(){return i.ssz}}),Object.defineProperty(t,"altair",{enumerable:!0,get:function(){return o.ssz}}),t.allForks=void 0;var s=r(18167);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(46605),o=r(68623);const a=r(80981).ssz.allForks;t.allForks=a},23687:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={phase0:!0,altair:!0,allForks:!0};Object.defineProperty(t,"phase0",{enumerable:!0,get:function(){return i.ts}}),Object.defineProperty(t,"altair",{enumerable:!0,get:function(){return o.ts}}),Object.defineProperty(t,"allForks",{enumerable:!0,get:function(){return a.ts}});var s=r(25501);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var i=r(46605),o=r(68623),a=r(80981)},9430:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LazyVariable=void 0;t.LazyVariable=class{constructor(){var e,t,r;r={set:!1},(t="var")in(e=this)?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}get(){if(!this.var.set)throw Error("variable not set");return this.var.value}set(e){this.var={set:!0,value:e}}}},34202:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBackedValue=void 0;const n=r(65995);t.isBackedValue=function(e){return n.isTreeBacked(e)}},12603:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),s(r(65995),t),s(r(34202),t),s(r(45695),t)},45695:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.readonlyEntries=t.readonlyValues=void 0;const n=r(65995);t.readonlyValues=function(e){return n.isTreeBacked(e)&&e.readonlyValues?e.readonlyValues():Object.values(e)},t.readonlyEntries=function(e){return n.isTreeBacked(e)&&e.readonlyEntries?e.readonlyEntries():Object.entries(e)}},65995:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),s(r(63645),t),s(r(42349),t)},63645:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},42349:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UnionTreeValue=t.ContainerLeafNodeStructTreeValue=t.ContainerTreeValue=t.CompositeListTreeValue=t.BasicListTreeValue=t.CompositeArrayTreeValue=t.BasicArrayTreeValue=t.TreeValue=t.TreeProxyHandler=t.proxyWrapTreeValue=t.getTreeValueClass=t.createTreeBacked=t.isTreeBacked=void 0;const n=r(46334),s=r(53910),i=r(4266);function o(e){return e&&e.type&&e.tree&&i.isTree(e.tree)}function a(e,t){return l(new(u(e))(e,t))}function u(e){if(n.isListType(e))return n.isBasicType(e.elementType)?T:d;if(n.isVectorType(e))return n.isBasicType(e.elementType)?h:_;if(n.isContainerType(e))return n.isContainerLeafNodeStructType(e)?p:y;if(n.isUnionType(e))return f;throw Error("No TreeValueClass for type")}function l(e){return new Proxy(e,t.TreeProxyHandler)}t.isTreeBacked=o,t.createTreeBacked=a,t.getTreeValueClass=u,t.proxyWrapTreeValue=l,t.TreeProxyHandler={get:(e,t)=>t in e?e[t]:e.getProperty(t),set:(e,t,r)=>e.setProperty(t,r),ownKeys:e=>e.getPropertyNames(),getOwnPropertyDescriptor:(e,t)=>e.type.getPropertyType(t)?{configurable:!0,enumerable:!0,writable:!0}:void 0};class c{type;tree;constructor(e,t){this.type=e,this.tree=t}clone(){return l(new(0,Object.getPrototypeOf(this).constructor)(this.type,this.tree.clone()))}valueOf(){return this.type.tree_convertToStruct(this.tree)}equals(e){return o(e)?s.byteArrayEquals(this.hashTreeRoot(),e.hashTreeRoot()):this.type.struct_equals(this,e)}size(){return this.type.tree_getSerializedLength(this.tree)}toStruct(){return this.type.tree_convertToStruct(this.tree)}toBytes(e,t){return this.type.tree_serializeToBytes(this.tree,e,t)}serialize(){const e=new Uint8Array(this.type.tree_getSerializedLength(this.tree));return this.toBytes(e,0),e}hashTreeRoot(){return this.tree.root}createProof(e){return this.type.tree_createProof(this.tree,e)}getPropertyNames(){return this.type.tree_getPropertyNames(this.tree)}[Symbol.iterator](){return this.values()}}t.TreeValue=c;class h extends c{type;constructor(e,t){super(e,t),this.type=e}getProperty(e){return this.type.tree_getProperty(this.tree,e)}setProperty(e,t){return this.type.tree_setProperty(this.tree,e,t)}*keys(){const e=this.getPropertyNames();e.pop(),yield*e.map(String)}values(){return this.type.tree_iterateValues(this.tree)}*entries(){const e=this.getPropertyNames();let t=0;for(const r of this.values())yield[String(e[t]),r],t++}readonlyValues(){return this.type.tree_readonlyIterateValues(this.tree)}*readonlyEntries(){const e=this.getPropertyNames();let t=0;for(const r of this.readonlyValues())yield[String(e[t]),r],t++}keysArray(){const e=this.getPropertyNames();return e.pop(),e.map(String)}valuesArray(){return this.type.tree_getValues(this.tree)}entriesArray(){const e=this.getPropertyNames(),t=this.valuesArray(),r=[];for(let n=0;n<t.length;n++)r.push([String(e[n]),t[n]]);return r}readonlyValuesArray(){return this.type.tree_readonlyGetValues(this.tree)}readonlyEntriesArray(){const e=this.getPropertyNames(),t=this.readonlyValuesArray(),r=[];for(let n=0;n<t.length;n++)r.push([String(e[n]),t[n]]);return r}}t.BasicArrayTreeValue=h;class _ extends c{type;constructor(e,t){super(e,t),this.type=e}getProperty(e){return"length"===e?this.type.tree_getProperty(this.tree,e):a(this.type.elementType,this.type.tree_getProperty(this.tree,e))}setProperty(e,t){return this.type.tree_setProperty(this.tree,e,o(t)?t.tree:this.type.elementType.struct_convertToTree(t))}*keys(){const e=this.getPropertyNames();e.pop(),yield*e.map(String)}*values(){for(const e of this.type.tree_iterateValues(this.tree))yield a(this.type.elementType,e)}*entries(){const e=this.getPropertyNames();let t=0;for(const r of this.values())yield[String(e[t]),r],t++}*readonlyValues(){for(const e of this.type.tree_readonlyIterateValues(this.tree))yield a(this.type.elementType,e)}*readonlyEntries(){const e=this.getPropertyNames();let t=0;for(const r of this.readonlyValues())yield[String(e[t]),r],t++}keysArray(){const e=this.getPropertyNames();return e.pop(),e.map(String)}valuesArray(){const e=[],t=this.type.tree_getValues(this.tree);for(let r=0;r<t.length;r++)e.push(a(this.type.elementType,t[r]));return e}entriesArray(){const e=this.getPropertyNames(),t=this.valuesArray(),r=[];for(let n=0;n<t.length;n++)r.push([String(e[n]),t[n]]);return r}readonlyValuesArray(){const e=[],t=this.type.tree_readonlyGetValues(this.tree);for(let r=0;r<t.length;r++)e.push(a(this.type.elementType,t[r]));return e}readonlyEntriesArray(){const e=this.getPropertyNames(),t=this.valuesArray(),r=[];for(let n=0;n<t.length;n++)r.push([String(e[n]),t[n]]);return r}}t.CompositeArrayTreeValue=_;class T extends h{type;constructor(e,t){super(e,t),this.type=e}push(...e){return this.type.tree_push(this.tree,...e)}pop(){return this.type.tree_pop(this.tree)}}t.BasicListTreeValue=T;class d extends _{type;constructor(e,t){super(e,t),this.type=e}push(...e){const t=e.map((e=>o(e)?e.tree:this.type.elementType.struct_convertToTree(e)));return this.type.tree_push(this.tree,...t)}pop(){return this.type.tree_pop(this.tree)}}t.CompositeListTreeValue=d;class y extends c{type;constructor(e,t){super(e,t),this.type=e}getProperty(e){if(!this.type.fields[e])return;const t=this.type.getPropertyType(e),r=this.type.tree_getProperty(this.tree,e);return this.type.fieldInfos.get(e).isBasic?r:a(t,r)}setProperty(e,t){if(this.type.fieldInfos.get(e).isBasic)return this.type.tree_setProperty(this.tree,e,t);if(o(t))return this.type.tree_setProperty(this.tree,e,t.tree);{const r=this.type.getPropertyType(e);return this.type.tree_setProperty(this.tree,e,r.struct_convertToTree(t))}}*keys(){yield*this.getPropertyNames()}*values(){for(const[e,t]of this.entries())yield t}*entries(){const e=this.getPropertyNames();let t=0;for(const r of this.type.tree_iterateValues(this.tree)){const s=e[t],i=this.type.getPropertyType(s);n.isCompositeType(i)?yield[s,a(i,r)]:yield[s,r],t++}}*readonlyValues(){for(const[e,t]of this.readonlyEntries())yield t}*readonlyEntries(){const e=this.getPropertyNames();let t=0;for(const r of this.type.tree_readonlyIterateValues(this.tree)){const s=e[t],i=this.type.getPropertyType(s);n.isCompositeType(i)?yield[s,a(i,r)]:yield[s,r],t++}}keysArray(){return this.getPropertyNames()}valuesArray(){const e=[],t=this.entriesArray();for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}entriesArray(){const e=this.keysArray(),t=this.valuesArray(),r=[];for(let s=0;s<t.length;s++){const i=e[s],o=t[s],u=this.type.getPropertyType(i);n.isCompositeType(u)?r.push([i,a(u,o)]):r.push([i,o])}return r}readonlyValuesArray(){const e=[],t=this.readonlyEntriesArray();for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}readonlyEntriesArray(){const e=this.keysArray(),t=this.readonlyValuesArray(),r=[];for(let s=0;s<t.length;s++){const i=e[s],o=t[s],u=this.type.getPropertyType(i);n.isCompositeType(u)?r.push([i,a(u,o)]):r.push([i,o])}return r}}t.ContainerTreeValue=y;class p extends c{type;constructor(e,t){super(e,t),this.type=e}getProperty(e){return this.type.tree_getProperty(this.tree,e)}setProperty(e,t){return this.type.tree_setProperty(this.tree,e,t)}*keys(){yield*this.getPropertyNames()}*values(){for(const[e,t]of this.entries())yield t}*entries(){const e=this.getPropertyNames();let t=0;for(const r of this.type.tree_iterateValues(this.tree)){const n=e[t];yield[n,r],t++}}*readonlyValues(){return yield*this.values()}*readonlyEntries(){return yield*this.entries()}keysArray(){return this.getPropertyNames()}valuesArray(){return this.type.tree_getValues(this.tree)}entriesArray(){const e=this.getPropertyNames(),t=this.type.tree_getValues(this.tree);return e.map(((e,r)=>[e,t[r]]))}readonlyValuesArray(){return this.valuesArray()}readonlyEntriesArray(){return this.entriesArray()}}t.ContainerLeafNodeStructTreeValue=p;class f extends c{type;constructor(e,t){super(e,t),this.type=e}getProperty(e){if("selector"!==e&&"value"!==e)throw new Error(`property ${e} does not exist in Union type`);const t=this.type.getPropertyTypeFromTree(this.tree,e),r=this.type.tree_getProperty(this.tree,e);return n.isCompositeType(t)?a(t,r):r}setProperty(e,t){if("value"!==e)throw new Error(`Unsupport setting property ${e} for Union`);return this.type.tree_setProperty(this.tree,e,t)}*keys(){yield*this.getPropertyNames()}*values(){for(const[e,t]of this.entries())yield t}entries(){throw new Error("Method not implemented for Union type")}readonlyValues(){throw new Error("Method not implemented for Union type")}readonlyEntries(){throw new Error("Method not implemented for Union type")}keysArray(){throw new Error("Method not implemented for Union type")}valuesArray(){throw new Error("Method not implemented for Union type")}entriesArray(){throw new Error("Method not implemented for Union type")}readonlyValuesArray(){throw new Error("Method not implemented for Union type")}readonlyEntriesArray(){throw new Error("Method not implemented for Union type")}}t.UnionTreeValue=f},25874:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.hash=void 0,s(r(9445),t),s(r(46334),t),s(r(12603),t);var i=r(59806);Object.defineProperty(t,"hash",{enumerable:!0,get:function(){return i.hash}}),s(r(53910),t),s(r(4266),t)},9445:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},5e3:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BasicType=t.isBasicType=t.BASIC_TYPE=void 0;const n=r(89945);t.BASIC_TYPE=Symbol.for("ssz/BasicType"),t.isBasicType=function(e){return n.isTypeOf(e,t.BASIC_TYPE)};class s extends n.Type{constructor(){super(),this._typeSymbols.add(t.BASIC_TYPE)}struct_clone(e){return e}struct_equals(e,t){return this.assertValidValue(e),this.assertValidValue(t),e===t}hasVariableSerializedLength(){return!1}getFixedSerializedLength(){return this.struct_getSerializedLength()}getMaxSerializedLength(){return this.struct_getSerializedLength()}getMinSerializedLength(){return this.struct_getSerializedLength()}bytes_validate(e,t){if(!e)throw new Error("Data is null or undefined");if(0===e.length)throw new Error("Data is empty");const r=e.length-t;if(r<this.struct_getSerializedLength())throw new Error(`Data length of ${r} is too small, expect ${this.struct_getSerializedLength()}`)}struct_hashTreeRoot(e){const t=new Uint8Array(32);return this.struct_serializeToBytes(e,t,0),t}}t.BasicType=s},12039:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BooleanType=t.isBooleanType=t.BOOLEAN_TYPE=void 0;const n=r(89945),s=r(5e3);t.BOOLEAN_TYPE=Symbol.for("ssz/BooleanType"),t.isBooleanType=function(e){return n.isTypeOf(e,t.BOOLEAN_TYPE)};class i extends s.BasicType{constructor(){super(),this._typeSymbols.add(t.BOOLEAN_TYPE)}struct_getSerializedLength(){return 1}struct_assertValidValue(e){if(!0!==e&&!1!==e)throw new Error("Boolean value must be true or false")}struct_defaultValue(){return!1}struct_serializeToBytes(e,t,r){return t[r]=e?1:0,r+1}struct_deserializeFromBytes(e,t){if(this.bytes_validate(e,t),1===e[t])return!0;if(0===e[t])return!1;throw new Error("Invalid boolean value")}struct_convertFromJson(e){return this.struct_assertValidValue(e),e}struct_convertToJson(e){return e}}t.BooleanType=i},75393:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),s(r(5e3),t),s(r(12039),t),s(r(94378),t),s(r(16955),t)},72110:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NoneType=t.isNoneType=t.NONE_TYPE=void 0;const n=r(89945),s=r(5e3);t.NONE_TYPE=Symbol.for("ssz/NoneType"),t.isNoneType=function(e){return n.isTypeOf(e,t.NONE_TYPE)};class i extends s.BasicType{constructor(){super(),this._typeSymbols.add(t.NONE_TYPE)}struct_deserializeFromBytes(e,t){return null}struct_assertValidValue(e){if(null!==e)throw new Error("None value must be null")}struct_defaultValue(){return null}struct_getSerializedLength(e){return 0}struct_serializeToBytes(e,t,r){return 0}struct_convertFromJson(e){return this.assertValidValue(e),null}struct_convertToJson(e,t){return null}}t.NoneType=i},94378:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BigIntUintType=t.isBigIntUintType=t.BIGINT_UINT_TYPE=t.Number64UintType=t.NumberUintType=t.isNumber64UintType=t.isNumberUintType=t.NUMBER_64_UINT_TYPE=t.NUMBER_UINT_TYPE=t.UintType=t.isUintType=t.UINT_TYPE=void 0;const n=r(18147),s=r(89945),i=r(5e3);t.UINT_TYPE=Symbol.for("ssz/UintType"),t.isUintType=function(e){return s.isTypeOf(e,t.UINT_TYPE)};class o extends i.BasicType{byteLength;infinityWhenBig;constructor(e){super(),this.byteLength=e.byteLength,this.infinityWhenBig=!0===e.infinityWhenBig||this.byteLength>6,this._typeSymbols.add(t.UINT_TYPE)}struct_getSerializedLength(){return this.byteLength}}t.UintType=o,t.NUMBER_UINT_TYPE=Symbol.for("ssz/NumberUintType"),t.NUMBER_64_UINT_TYPE=Symbol.for("ssz/Number64UintType");const a=BigInt(32);t.isNumberUintType=function(e){return s.isTypeOf(e,t.NUMBER_UINT_TYPE)},t.isNumber64UintType=function(e){return s.isTypeOf(e,t.NUMBER_64_UINT_TYPE)};class u extends o{_maxBigInt;constructor(e){super(e),this._typeSymbols.add(t.NUMBER_UINT_TYPE)}struct_assertValidValue(e){if(e!==1/0&&(!Number.isSafeInteger(e)||e>n.bigIntPow(BigInt(2),BigInt(8)*BigInt(this.byteLength))))throw new Error("Uint value is not a number");if(e<0)throw new Error("Uint value must be gte 0")}struct_defaultValue(){return 0}struct_getMaxBigInt(){return void 0===this._maxBigInt&&(this._maxBigInt=n.bigIntPow(BigInt(2),BigInt(8*this.byteLength))-BigInt(1)),this._maxBigInt}struct_serializeToBytes(e,t,r){if(this.byteLength>6&&e===1/0)for(let n=r;n<r+this.byteLength;n++)t[n]=255;else{let n=e;const s=255;for(let e=0;e<this.byteLength;e++)t[r+e]=n&s,n=Math.floor(n/256)}return r+this.byteLength}struct_deserializeFromBytes(e,t){this.bytes_validate(e,t);let r=!0,n=0;for(let s=0;s<this.byteLength;s++)n+=e[t+s]*2**(8*s),255!==e[t+s]&&(r=!1);return this.infinityWhenBig&&r?1/0:Number(n)}struct_convertFromJson(e){let t;const r=BigInt(e);if(this.infinityWhenBig&&r===this.struct_getMaxBigInt())t=1/0;else{if(!(r<Number.MAX_SAFE_INTEGER))throw new Error("Uint value unsafe");t=Number(r)}return this.assertValidValue(t),t}struct_convertToJson(e){return this.byteLength>4?e===1/0?this.struct_getMaxBigInt().toString():String(e):e}}t.NumberUintType=u;const l=2**32;t.Number64UintType=class extends u{constructor(){super({byteLength:8}),this._typeSymbols.add(t.NUMBER_64_UINT_TYPE)}struct_deserializeFromHashObject(e,t){const r=Math.floor(t/8);if(r<0||r>3)throw new Error(`Invalid numberOffset ${r}`);let n=0,s=0;switch(r){case 0:n=4294967295&e.h0,s=4294967295&e.h1;break;case 1:n=4294967295&e.h2,s=4294967295&e.h3;break;case 2:n=4294967295&e.h4,s=4294967295&e.h5;break;case 3:n=4294967295&e.h6,s=4294967295&e.h7;break;default:throw new Error(`Invalid offset ${r}`)}return n<0&&(n>>>=0),0===s?n:(s<0&&(s>>>=0),4294967295===n&&4294967295===s?1/0:s*l+n)}struct_serializeToHashObject(e,t,r){const n=Math.floor(r/8);let s,i;switch(e!==1/0?(s=4294967295&e,i=4294967295&Math.floor(e/l)):(s=4294967295,i=4294967295),n){case 0:t.h0=s,t.h1=i;break;case 1:t.h2=s,t.h3=i;break;case 2:t.h4=s,t.h5=i;break;case 3:t.h6=s,t.h7=i;break;default:throw new Error(`Invalid offset ${n}`)}return n+1}},t.BIGINT_UINT_TYPE=Symbol.for("ssz/BigIntUintType"),t.isBigIntUintType=function(e){return s.isTypeOf(e,t.BIGINT_UINT_TYPE)};t.BigIntUintType=class extends o{constructor(e){super(e),this._typeSymbols.add(t.BIGINT_UINT_TYPE)}struct_assertValidValue(e){if("bigint"!==typeof e)throw new Error("Uint value is not a bigint");if(e<0)throw new Error("Uint value must be gte 0")}struct_defaultValue(){return BigInt(0)}struct_serializeToBytes(e,t,r){let n=e,s=Number(BigInt.asUintN(32,n));for(let i=0;i<this.byteLength;i++)t[r+i]=Number(255&s),(i+1)%4!==0?s>>=8:(n>>=a,s=Number(BigInt.asUintN(32,n)));return r+this.byteLength}struct_deserializeFromBytes(e,t){this.bytes_validate(e,t);let r=BigInt(0),n=0,s=0;for(let i=0;i<this.byteLength;i++)s+=e[t+i]<<i%4*8,(i+1)%4===0&&(s<0&&(s>>>=0),0===n?r=BigInt(s):r+=BigInt(s)<<BigInt(32*n),n++,s=0);return s&&(r+=BigInt(s>>>0)<<BigInt(32*n)),r}struct_convertFromJson(e){const t=BigInt(e);return this.assertValidValue(t),t}struct_convertToJson(e){return this.byteLength>4?e.toString():Number(e)}}},16955:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.booleanType=t.number32Type=t.byteType=void 0;const n=r(94378),s=r(12039);t.byteType=new n.NumberUintType({byteLength:1}),t.number32Type=new n.NumberUintType({byteLength:4}),t.booleanType=new s.BooleanType},75148:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CompositeType=t.isCompositeType=t.COMPOSITE_TYPE=void 0;const n=r(12603),s=r(89945),i=r(56050),o=r(59806),a=r(53910);function u(e){return s.isTypeOf(e,t.COMPOSITE_TYPE)}t.COMPOSITE_TYPE=Symbol.for("ssz/CompositeType"),t.isCompositeType=u;class l extends s.Type{_chunkDepth;_defaultNode;constructor(){super(),this._typeSymbols.add(t.COMPOSITE_TYPE)}tree_equals(e,t){return a.byteArrayEquals(e.root,t.root)}bytes_equals(e,t){return a.byteArrayEquals(e,t)}tree_defaultValue(){return new i.Tree(this.tree_defaultNode())}tree_clone(e){return e.clone()}bytes_clone(e,t=0,r=e.length){const n=new Uint8Array(r-t);return e.subarray(t,r).set(n),n}struct_serialize(e,t){const r=new Uint8Array(this.struct_getSerializedLength(e));return this.struct_serializeToBytes(e,r,0)}tree_serialize(e,t){const r=new Uint8Array(this.tree_getSerializedLength(e));return this.tree_serializeToBytes(e,r,0)}bytes_validate(e,t,r){if(!e)throw new Error("Data is null or undefined");if(0===e.length)throw new Error("Data is empty");if(t<0)throw new Error(`Start param is negative: ${t}`);if(t>e.length)throw new Error(`Start param: ${t} is greater than length: ${e.length}`);if(r<0)throw new Error(`End param is negative: ${r}`);if(r>e.length)throw new Error(`End param: ${r} is greater than length: ${e.length}`);const n=r-t,s=this.getFixedSerializedLength();if(null!==s&&n!==s)throw new Error(`Incorrect data length ${n}, expect ${s}`);if(r-t<this.getMinSerializedLength())throw new Error(`Data length ${n} is too small, expect at least ${this.getMinSerializedLength()}`)}struct_deserialize(e){return this.struct_deserializeFromBytes(e,0,e.length)}tree_deserialize(e){return this.tree_deserializeFromBytes(e,0,e.length)}struct_getChunkCount(e){return this.getMaxChunkCount()}tree_getChunkCount(e){return this.getMaxChunkCount()}*struct_yieldChunkRoots(e){const t=this.struct_getChunkCount(e);for(let r=0;r<t;r++)yield this.struct_getRootAtChunkIndex(e,r)}getChunkDepth(){return this._chunkDepth||(this._chunkDepth=i.countToDepth(BigInt(this.getMaxChunkCount()))),this._chunkDepth}getGindexAtChunkIndex(e){return i.toGindex(this.getChunkDepth(),BigInt(e))}getGindexBitStringAtChunkIndex(e){return i.toGindexBitstring(this.getChunkDepth(),e)}tree_getSubtreeAtChunkIndex(e,t){return e.getSubtree(this.getGindexBitStringAtChunkIndex(t))}tree_setSubtreeAtChunkIndex(e,t,r,n=!1){e.setSubtree(this.getGindexBitStringAtChunkIndex(t),r,n)}tree_getRootAtChunkIndex(e,t){return e.getRoot(this.getGindexBitStringAtChunkIndex(t))}tree_setRootAtChunkIndex(e,t,r,n=!1){e.setRoot(this.getGindexBitStringAtChunkIndex(t),r,n)}getPathInfo(e){const t=[];let r=this;for(const n of e){if(!u(r))throw new Error("Invalid path: cannot navigate beyond a basic type");t.push(r.getPropertyGindex(n)),r=r.getPropertyType(n)}return{type:r,gindex:i.concatGindices(t)}}getPathGindex(e){return this.getPathInfo(e).gindex}tree_createProof(e,t){const r=t.map((t=>{const{type:r,gindex:n}=this.getPathInfo(t);return u(r)?r.tree_getLeafGindices(r.hasVariableSerializedLength()?e.getSubtree(n):void 0,n):n})).flat(1);return e.getProof({type:i.ProofType.treeOffset,gindices:r})}tree_createFromProof(e,t){const r=i.Tree.createFromProof(t);if(!a.byteArrayEquals(r.root,e))throw new Error("Proof does not match trusted root");return r}tree_createFromProofUnsafe(e){return i.Tree.createFromProof(e)}struct_hashTreeRoot(e){return o.merkleize(this.struct_yieldChunkRoots(e),this.getMaxChunkCount())}tree_hashTreeRoot(e){return e.root}assertValidValue(e){this.struct_assertValidValue(e)}equals(e,t){return n.isBackedValue(e)&&n.isBackedValue(t)?e.equals(t):this.struct_equals(e,t)}defaultValue(){return this.struct_defaultValue()}clone(e){return n.isBackedValue(e)?e.clone():this.struct_clone(e)}size(e){return n.isBackedValue(e)?e.size():this.struct_getSerializedLength(e)}maxSize(){return this.getMaxSerializedLength()}minSize(){return this.getMinSerializedLength()}fromBytes(e,t,r){return this.struct_deserializeFromBytes(e,t,r)}deserialize(e){return this.fromBytes(e,0,e.length)}toBytes(e,t,r){return n.isBackedValue(e)?e.toBytes(t,r):this.struct_serializeToBytes(e,t,r)}serialize(e){if(n.isBackedValue(e))return e.serialize();{const t=new Uint8Array(this.size(e));return this.toBytes(e,t,0),t}}hashTreeRoot(e){return n.isBackedValue(e)?e.hashTreeRoot():this.struct_hashTreeRoot(e)}fromJson(e,t){return this.struct_convertFromJson(e,t)}toJson(e,t){return this.struct_convertToJson(e,t)}createTreeBacked(e){return n.createTreeBacked(this,e)}createTreeBackedFromStruct(e){return this.createTreeBacked(this.struct_convertToTree(e))}createTreeBackedFromBytes(e){return this.createTreeBacked(this.tree_deserialize(e))}createTreeBackedFromJson(e,t){return this.createTreeBackedFromStruct(this.struct_convertFromJson(e,t))}createTreeBackedFromProof(e,t){return this.createTreeBacked(this.tree_createFromProof(e,t))}createTreeBackedFromProofUnsafe(e){return this.createTreeBacked(this.tree_createFromProofUnsafe(e))}defaultTreeBacked(){return n.createTreeBacked(this,this.tree_defaultValue())}}t.CompositeType=l},51930:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CompositeArrayType=t.BasicArrayType=void 0;const n=r(75148),s=r(86297),i=r(56050),o=r(42349);class a extends n.CompositeType{elementType;constructor(e){super(),this.elementType=e.elementType}struct_getSerializedLength(e){return this.elementType.struct_getSerializedLength()*this.struct_getLength(e)}getMaxSerializedLength(){return this.getMaxLength()*this.elementType.getMaxSerializedLength()}getMinSerializedLength(){return this.getMinLength()*this.elementType.getMinSerializedLength()}struct_assertValidValue(e){for(let r=0;r<this.struct_getLength(e);r++)try{this.elementType.struct_assertValidValue(e[r])}catch(t){throw new Error(`Invalid element ${r}: ${t.message}`)}}struct_equals(e,t){if(this.struct_getLength(e)!==this.struct_getLength(t))return!1;for(let r=0;r<this.struct_getLength(e);r++)if(!this.elementType.struct_equals(e[r],t[r]))return!1;return!0}struct_clone(e){const t=this.struct_defaultValue();for(let r=0;r<this.struct_getLength(e);r++)t[r]=this.elementType.struct_clone(e[r]);return t}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=this.elementType.struct_getSerializedLength();return Array.from({length:(r-t)/n},((r,s)=>this.elementType.struct_deserializeFromBytes(e,t+s*n)))}struct_serializeToBytes(e,t,r){const n=this.struct_getLength(e);let s=r;for(let i=0;i<n;i++)s=this.elementType.struct_serializeToBytes(e[i],t,s);return s}struct_getRootAtChunkIndex(e,t){const r=new Uint8Array(32),n=this.elementType.struct_getSerializedLength(),s=Math.floor(32/n),i=t*s,o=Math.min(this.struct_getLength(e),i+s);for(let a=i,u=0;a<o;a++,u+=n)this.elementType.struct_serializeToBytes(e[a],r,u);return r}struct_getPropertyNames(e){const t=this.struct_getLength(e);return Array.from({length:t},((e,t)=>t)).concat(["length"])}struct_convertFromJson(e){return Array.from({length:e.length},((t,r)=>this.elementType.fromJson(e[r])))}struct_convertToJson(e){return Array.from({length:this.struct_getLength(e)},((t,r)=>this.elementType.struct_convertToJson(e[r])))}struct_convertToTree(e){if(o.isTreeBacked(e))return e.tree.clone();const t=[];for(const r of this.struct_yieldChunkRoots(e))t.push(new i.LeafNode(r));return new i.Tree(i.subtreeFillToContents(t,this.getChunkDepth()))}tree_convertToStruct(e){const t=this.struct_defaultValue(),r=this.tree_getLength(e);for(let n=0;n<r;n++)t[n]=this.tree_getValueAtIndex(e,n);return t}tree_getSerializedLength(e){return this.elementType.struct_getSerializedLength()*this.tree_getLength(e)}tree_deserializeFromBytes(e,t,r){const n=this.tree_defaultValue(),s=r-t,i=Math.ceil(s/32);for(let o=0;o<i;o++){const r=new Uint8Array(e.buffer,e.byteOffset+t+32*o,Math.min(32,s-32*o)),i=new Uint8Array(32);i.set(r),this.tree_setRootAtChunkIndex(n,o,i,!0)}return n}tree_serializeToBytes(e,t,r){const n=this.tree_getSerializedLength(e),s=Math.floor(n/32),i=n%32;let o=0;if(s>0){const n=e.getNodesAtDepth(this.getChunkDepth(),0,s);for(;o<n.length;o++)t.set(n[o].root,r+32*o)}return i&&t.set(this.tree_getRootAtChunkIndex(e,s).slice(0,i),r+32*o),r+n}getPropertyGindex(e){return this.getGindexAtChunkIndex(this.getChunkIndex(e))}getPropertyType(e){return this.elementType}*tree_iterateValues(e){const t=this.tree_getLength(e);if(0===t)return;const r=this.elementType.struct_getSerializedLength();if(32%r!==0)throw new Error("cannot handle a non-chunk-alignable elementType");let n=t;const s=e.getNodesAtDepth(this.getChunkDepth(),0,this.tree_getChunkCount(e));for(let i=0;i<s.length;i++){const e=s[i].root;for(let t=0;t<32;t+=r)if(yield this.elementType.struct_deserializeFromBytes(e,t),n--,0===n)return}}*tree_readonlyIterateValues(e){yield*this.tree_iterateValues(e)}tree_getValues(e){const t=this.tree_getLength(e);if(0===t)return[];const r=this.elementType.struct_getSerializedLength();if(32%r!==0)throw new Error("cannot handle a non-chunk-alignable elementType");let n=t;const s=[],i=e.getNodesAtDepth(this.getChunkDepth(),0,this.tree_getChunkCount(e));e:for(let o=0;o<i.length;o++){const e=i[o].root;for(let t=0;t<32;t+=r)if(s.push(this.elementType.struct_deserializeFromBytes(e,t)),n--,0===n)break e}return s}tree_readonlyGetValues(e){return this.tree_getValues(e)}getChunkOffset(e){const t=this.elementType.struct_getSerializedLength();return e%Math.ceil(32/t)*t}getChunkIndex(e){return Math.floor(e/Math.ceil(32/this.elementType.struct_getSerializedLength()))}tree_getValueAtIndex(e,t){const r=this.tree_getRootAtChunkIndex(e,this.getChunkIndex(t));return this.elementType.struct_deserializeFromBytes(r,this.getChunkOffset(t))}tree_setValueAtIndex(e,t,r,n=!1){const s=this.getGindexBitStringAtChunkIndex(this.getChunkIndex(t)),i=new Uint8Array(32);return i.set(e.getRoot(s)),this.elementType.struct_serializeToBytes(r,i,this.getChunkOffset(t)),e.setRoot(s,i,n),!0}tree_getProperty(e,t){const r=this.tree_getLength(e);if("length"===t)return r;const n=Number(t);return Number.isNaN(n)||n>=r?void 0:this.tree_getValueAtIndex(e,n)}tree_setProperty(e,t,r,n=!1){return this.tree_setValueAtIndex(e,t,r,n)}tree_deleteProperty(e,t){return this.tree_setProperty(e,t,this.elementType.struct_defaultValue())}tree_getPropertyNames(e){return Array.from({length:this.tree_getLength(e)},((e,t)=>String(t))).concat("length")}bytes_getVariableOffsets(e){return[]}tree_getLeafGindices(e,t=BigInt(1)){const r=this.tree_getChunkCount(e),n=[];for(let s=0,o=i.concatGindices([t,i.toGindex(this.getChunkDepth(),BigInt(0))]);s<r;s++,o++)n.push(o);return n}}t.BasicArrayType=a;class u extends n.CompositeType{elementType;constructor(e){super(),this.elementType=e.elementType}struct_getSerializedLength(e){const t=this.elementType.getFixedSerializedLength();if(null===t){let t=0;for(let r=0;r<this.struct_getLength(e);r++)t+=this.elementType.struct_getSerializedLength(e[r])+4;return t}return t*this.struct_getLength(e)}getMaxSerializedLength(){const e=this.elementType.getFixedSerializedLength();return null===e?4*this.getMaxLength()+this.getMaxLength()*this.elementType.getMaxSerializedLength():this.getMaxLength()*e}getMinSerializedLength(){const e=this.elementType.getFixedSerializedLength();return null===e?4*this.getMinLength()+this.getMinLength()*this.elementType.getMinSerializedLength():this.getMinLength()*e}struct_assertValidValue(e){for(let r=0;r<this.struct_getLength(e);r++)try{this.elementType.struct_assertValidValue(e[r])}catch(t){throw new Error(`Invalid element ${r}: ${t.message}`)}}struct_equals(e,t){if(this.struct_getLength(e)!==this.struct_getLength(t))return!1;for(let r=0;r<this.struct_getLength(e);r++)if(!this.elementType.struct_equals(e[r],t[r]))return!1;return!0}struct_clone(e){const t=this.struct_defaultValue();for(let r=0;r<this.struct_getLength(e);r++)t[r]=this.elementType.struct_clone(e[r]);return t}struct_deserializeFromBytes(e,t,r){if(this.bytes_validate(e,t,r),t===r)return[];const n=this.elementType.getFixedSerializedLength();if(null===n){const n=[];let o,a=t;const u=new DataView(e.buffer,e.byteOffset),l=t+u.getUint32(t,!0);let c,h=l;for(;a<l;){if(h>r)throw new Error("Offset out of bounds");if(o=a+4,c=o===l?r:t+u.getUint32(o,!0),h>c)throw new Error("Offsets must be increasing");try{n.push(this.elementType.struct_deserializeFromBytes(e,h,c))}catch(i){throw new s.SszErrorPath(i,n.length)}a=o,h=c}if(l!==a)throw new Error("First offset skips variable data");return n}{const s=n;return Array.from({length:(r-t)/s},((r,n)=>this.elementType.struct_deserializeFromBytes(e,t+n*s,t+(n+1)*s)))}}struct_serializeToBytes(e,t,r){const n=this.struct_getLength(e);if(this.elementType.hasVariableSerializedLength()){let s=r+4*n;const i=new DataView(t.buffer,t.byteOffset+r);for(let o=0;o<n;o++)i.setUint32(4*o,s-r,!0),s=this.elementType.struct_serializeToBytes(e[o],t,s);return s}{let s=r;for(let r=0;r<n;r++)s=this.elementType.struct_serializeToBytes(e[r],t,s);return s}}struct_getRootAtChunkIndex(e,t){return this.elementType.hashTreeRoot(e[t])}struct_getPropertyNames(e){const t=this.struct_getLength(e);return Array.from({length:t},((e,t)=>t)).concat(["length"])}struct_convertFromJson(e,t){return Array.from({length:e.length},((r,n)=>this.elementType.struct_convertFromJson(e[n],t)))}struct_convertToJson(e,t){return Array.from({length:this.struct_getLength(e)},((r,n)=>this.elementType.struct_convertToJson(e[n],t)))}struct_convertToTree(e){if(o.isTreeBacked(e))return e.tree.clone();const t=[];for(const r of e)t.push(this.elementType.struct_convertToTree(r).rootNode);return new i.Tree(i.subtreeFillToContents(t,this.getChunkDepth()))}tree_convertToStruct(e){const t=this.struct_defaultValue(),r=this.tree_getLength(e);for(let n=0;n<r;n++)t[n]=this.elementType.tree_convertToStruct(this.tree_getSubtreeAtChunkIndex(e,n));return t}tree_getSerializedLength(e){const t=this.elementType.getFixedSerializedLength();if(null===t){let t=0;for(let r=0;r<this.tree_getLength(e);r++)t+=this.elementType.tree_getSerializedLength(this.tree_getSubtreeAtChunkIndex(e,r))+4;return t}return t*this.tree_getLength(e)}tree_serializeToBytes(e,t,r){const n=this.tree_getLength(e),s=e.getNodesAtDepth(this.getChunkDepth(),0,n);if(this.elementType.hasVariableSerializedLength()){let e=r+4*n;const o=new DataView(t.buffer,t.byteOffset+r,4*n);for(let n=0;n<s.length;n++)o.setUint32(4*n,e-r,!0),e=this.elementType.tree_serializeToBytes(new i.Tree(s[n]),t,e);return e}{let e=r;for(let r=0;r<s.length;r++)e=this.elementType.tree_serializeToBytes(new i.Tree(s[r]),t,e);return e}}getPropertyGindex(e){return this.getGindexAtChunkIndex(e)}getPropertyType(e){return this.elementType}tree_getProperty(e,t){const r=this.tree_getLength(e);if("length"===t)return r;const n=Number(t);return Number.isNaN(n)||n>=r?void 0:this.tree_getSubtreeAtChunkIndex(e,n)}tree_setProperty(e,t,r,n=!1){return this.tree_setSubtreeAtChunkIndex(e,t,r,n),!0}tree_deleteProperty(e,t){return this.tree_setProperty(e,t,this.elementType.tree_defaultValue())}tree_getPropertyNames(e){return Array.from({length:this.tree_getLength(e)},((e,t)=>t)).concat(["length"])}*tree_iterateValues(e){for(const t of i.iterateAtDepth(this.getChunkDepth(),BigInt(0),BigInt(this.tree_getLength(e))))yield e.getSubtree(t)}*tree_readonlyIterateValues(e){const t=e.getNodesAtDepth(this.getChunkDepth(),0,this.tree_getLength(e));for(let r=0;r<t.length;r++)yield new i.Tree(t[r])}tree_getValues(e){const t=[],r=i.getGindicesAtDepth(this.getChunkDepth(),0,this.tree_getLength(e));for(let n=0;n<r.length;n++)t.push(e.getSubtree(r[n]));return t}tree_readonlyGetValues(e){const t=[],r=e.getNodesAtDepth(this.getChunkDepth(),0,this.tree_getLength(e));for(let n=0;n<r.length;n++)t.push(new i.Tree(r[n]));return t}bytes_getVariableOffsets(e){if(this.elementType.hasVariableSerializedLength()){if(0===e.length)return[];const t=[],r=new DataView(e.buffer,e.byteOffset),n=r.getUint32(0,!0);let s,i=n,o=0,a=0;for(;o<n;){if(i>e.length)throw new Error("Offset out of bounds");if(a=o+4,s=a===n?e.length:r.getUint32(a,!0),i>s)throw new Error("Offsets must be increasing");t.push([i,s]),o=a,i=s}if(n!==o)throw new Error("First offset skips variable data");return t}return[]}tree_getLeafGindices(e,t=BigInt(1)){const r=this.tree_getChunkCount(e),n=[],s=i.toGindex(this.getChunkDepth(),BigInt(0)),o=i.concatGindices([t,s]);if(this.elementType.hasVariableSerializedLength()){if(!e)throw new Error("variable type requires tree argument to get leaves");for(let t=0,i=s,a=o;t<r;t++,i++,a++)n.push(...this.elementType.tree_getLeafGindices(e.getSubtree(i),a))}else for(let i=0,a=o;i<r;i++,a++)n.push(...this.elementType.tree_getLeafGindices(void 0,a));return n}}t.CompositeArrayType=u},63595:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BitListType=t.isBitListType=t.BITLIST_TYPE=void 0;const n=r(4634),s=r(75393),i=r(89945),o=r(53910),a=r(26772);t.BITLIST_TYPE=Symbol.for("ssz/BitListType"),t.isBitListType=function(e){return i.isTypeOf(e,t.BITLIST_TYPE)};class u extends n.BasicListType{constructor(e){super({elementType:s.booleanType,...e}),this._typeSymbols.add(t.BITLIST_TYPE)}struct_getByte(e,t){const r=8*t;let n="0b";for(let s=Math.min(r+7,e.length-1);s>=r;s--)n+=e[s]?"1":"0";return Number(n)}struct_getLength(e){return e.length}struct_getByteLength(e){return Math.ceil(e.length/8)}struct_getSerializedLength(e){return e.length%8===0?this.struct_getByteLength(e)+1:this.struct_getByteLength(e)}getMaxSerializedLength(){return Math.ceil(this.limit/8)+1}getMinSerializedLength(){return 1}struct_getChunkCount(e){return Math.ceil(this.struct_getLength(e)/256)}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=[],s=e=>"1"===e;for(let u=t;u<r-1;u++){let t=e[u].toString(2);t="0".repeat(8-t.length)+t,n.push(...Array.prototype.map.call(t,s).reverse())}const i=e[r-1];if(0===i)throw new Error("Invalid deserialized bitlist, padding bit required");if(1===i)return n;const o=Array.prototype.map.call(i.toString(2),s).reverse(),a=o.lastIndexOf(!0);if(n.push(...o.slice(0,a)),n.length>this.limit)throw new Error("Invalid deserialized bitlist, length greater than limit");return n}struct_serializeToBytes(e,t,r){const n=this.struct_getByteLength(e);for(let i=0;i<n;i++)t[r+i]=this.struct_getByte(e,i);const s=r+n;return e.length%8===0?(t[s]=1,s+1):(t[s-1]|=1<<e.length%8,s)}struct_getRootAtChunkIndex(e,t){const r=new Uint8Array(a.BYTES_PER_CHUNK),n=Math.min(a.BYTES_PER_CHUNK,this.struct_getByteLength(e)-t),s=t*a.BYTES_PER_CHUNK;for(let i=0;i<n;i++)r[i]=this.struct_getByte(e,i+s);return r}struct_convertFromJson(e){const t=o.fromHexString(e);return this.struct_deserializeFromBytes(t,0,t.length)}struct_convertToJson(e){return o.toHexString(this.serialize(e))}tree_getByteLength(e){return Math.ceil(this.tree_getLength(e)/8)}tree_getSerializedLength(e){return this.tree_getLength(e)%8===0?this.tree_getByteLength(e)+1:this.tree_getByteLength(e)}tree_deserializeFromBytes(e,t,r){const n=e[r-1];if(0===n)throw new Error("Invalid deserialized bitlist, padding bit required");if(1===n){const n=super.tree_deserializeFromBytes(e,t,r-1),s=8*(r-t-1);return this.tree_setLength(n,s),n}const s=super.tree_deserializeFromBytes(e,t,r),i=this.getGindexBitStringAtChunkIndex(Math.ceil((r-t)/32)-1),o=new Uint8Array(32);o.set(s.getRoot(i));const a=(r-t)%32-1,u=n.toString(2).length-1,l=8*(r-t-1)+u,c=255>>8-u;return o[a]&=c,s.setRoot(i,o),this.tree_setLength(s,l),s}tree_serializeToBytes(e,t,r){const n=this.tree_getByteLength(e),s=Math.floor(n/32),i=n%32;let o=0;if(s>0){const n=e.getNodesAtDepth(this.getChunkDepth(),0,s);for(;o<n.length;o++)t.set(n[o].root,r+32*o)}i&&t.set(this.tree_getRootAtChunkIndex(e,s).slice(0,i),r+32*o);const a=this.tree_getLength(e),u=r+this.tree_getSerializedLength(e);return t[u-1]|=1<<a%8,u}getBitOffset(e){return e%8}getChunkOffset(e){return Math.floor(e%256/8)}getChunkIndex(e){return Math.floor(e/256)}tree_getChunkCount(e){return Math.ceil(this.tree_getLength(e)/256)}*tree_iterateValues(e){const t=this.tree_getLength(e),r=this.tree_getChunkCount(e),n=e.getNodesAtDepth(this.getChunkDepth(),0,r);let s=0;for(let i=0;i<n.length;i++){const e=n[i].root;for(let r=0;r<256&&s<t;s++,r++){const t=e[this.getChunkOffset(s)];yield!!(t&1<<this.getBitOffset(s))}}}tree_getValues(e){const t=this.tree_getLength(e),r=this.tree_getChunkCount(e),n=e.getNodesAtDepth(this.getChunkDepth(),0,r);let s=0;const i=[];for(let o=0;o<n.length;o++){const e=n[o].root;for(let r=0;r<256&&s<t;s++,r++){const t=e[this.getChunkOffset(s)];i.push(!!(t&1<<this.getBitOffset(s)))}}return i}tree_getValueAtIndex(e,t){return!!(this.tree_getRootAtChunkIndex(e,this.getChunkIndex(t))[this.getChunkOffset(t)]&1<<this.getBitOffset(t))}tree_setValueAtIndex(e,t,r,n=!1){const s=this.getGindexBitStringAtChunkIndex(this.getChunkIndex(t)),i=new Uint8Array(32);i.set(e.getRoot(s));const o=this.getChunkOffset(t);return r?i[o]|=1<<this.getBitOffset(t):i[o]&=255^1<<this.getBitOffset(t),e.setRoot(s,i,n),!0}getMaxChunkCount(){return Math.ceil(this.limit/256)}}t.BitListType=u},4518:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BitVectorType=t.isBitVectorType=t.BITVECTOR_TYPE=void 0;const n=r(25662),s=r(75393),i=r(89945),o=r(53910),a=r(26772);t.BITVECTOR_TYPE=Symbol.for("ssz/BitVectorType"),t.isBitVectorType=function(e){return i.isTypeOf(e,t.BITVECTOR_TYPE)};class u extends n.BasicVectorType{constructor(e){super({elementType:s.booleanType,...e}),this._typeSymbols.add(t.BITVECTOR_TYPE)}struct_getLength(e){return this.length}struct_getByteLength(e){return Math.ceil(this.length/8)}struct_getSerializedLength(e){return Math.ceil(this.length/8)}getFixedSerializedLength(){return Math.ceil(this.length/8)}getMaxSerializedLength(){return Math.ceil(this.length/8)}getMinSerializedLength(){return Math.ceil(this.length/8)}struct_getChunkCount(e){return Math.ceil(this.struct_getLength(e)/256)}struct_getByte(e,t){const r=8*t;let n="0b";for(let s=Math.min(r+7,e.length-1);s>=r;s--)n+=e[s]?"1":"0";return Number(n)}struct_deserializeFromBytes(e,t,r){if(this.bytes_validate(e,t,r),r-t!==this.size(null))throw new Error("Invalid bitvector: length not equal to vector length");const n=[];for(let i=t;i<r-1;i++)n.push(...o.getByteBits(e,i));const s=this.length%8;if(s){const t=o.getByteBits(e,r-1);if(t.slice(s).some((e=>e)))throw new Error("Invalid bitvector: nonzero bits past length");n.push(...t.slice(0,s))}else n.push(...o.getByteBits(e,r-1));return n}struct_serializeToBytes(e,t,r){const n=this.struct_getByteLength(e);for(let s=0;s<n;s++)t[r+s]=this.struct_getByte(e,s);return r+n}struct_getRootAtChunkIndex(e,t){const r=new Uint8Array(a.BYTES_PER_CHUNK),n=Math.min(a.BYTES_PER_CHUNK,this.struct_getByteLength(e)-t),s=t*a.BYTES_PER_CHUNK;for(let i=0;i<n;i++)r[i]=this.struct_getByte(e,i+s);return r}struct_convertFromJson(e){const t=o.fromHexString(e);return this.fromBytes(t,0,t.length)}struct_convertToJson(e){return o.toHexString(this.serialize(e))}tree_getByteLength(e){return Math.ceil(this.tree_getLength(e)/8)}tree_getSerializedLength(e){return this.tree_getByteLength(e)}tree_deserializeFromBytes(e,t,r){const n=e[r-1],s=this.length%8;if(s>0){if((n&(255<<s&255))>0)throw new Error("Invalid deserialized bitvector length")}return super.tree_deserializeFromBytes(e,t,r)}getBitOffset(e){return e%8}getChunkOffset(e){return Math.floor(e%256/8)}getChunkIndex(e){return Math.floor(e/256)}tree_getChunkCount(e){return Math.ceil(this.tree_getLength(e)/256)}*tree_iterateValues(e){const t=this.tree_getLength(e),r=this.tree_getChunkCount(e),n=e.getNodesAtDepth(this.getChunkDepth(),0,r);let s=0;for(let i=0;i<n.length;i++){const e=n[i].root;for(let r=0;r<256&&s<t;s++,r++){const t=e[this.getChunkOffset(s)];yield!!(t&1<<this.getBitOffset(s))}}}tree_getValues(e){const t=this.tree_getLength(e),r=this.tree_getChunkCount(e),n=e.getNodesAtDepth(this.getChunkDepth(),0,r);let s=0;const i=[];for(let o=0;o<n.length;o++){const e=n[o].root;for(let r=0;r<256&&s<t;s++,r++){const t=e[this.getChunkOffset(s)];i.push(!!(t&1<<this.getBitOffset(s)))}}return i}tree_getValueAtIndex(e,t){return!!(this.tree_getRootAtChunkIndex(e,this.getChunkIndex(t))[this.getChunkOffset(t)]&1<<this.getBitOffset(t))}tree_setProperty(e,t,r){const n=this.getGindexBitStringAtChunkIndex(this.getChunkIndex(t)),s=new Uint8Array(32);s.set(e.getRoot(n));const i=this.getChunkOffset(t);return r?s[i]|=1<<this.getBitOffset(t):s[i]&=255^1<<this.getBitOffset(t),e.setRoot(n,s),!0}getMaxChunkCount(){return Math.ceil(this.length/256)}}t.BitVectorType=u},30723:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ByteVectorType=t.isByteVectorType=t.BYTEVECTOR_TYPE=void 0;const n=r(25662),s=r(75393),i=r(89945),o=r(53910);t.BYTEVECTOR_TYPE=Symbol.for("ssz/ByteVectorType"),t.isByteVectorType=function(e){return i.isTypeOf(e,t.BYTEVECTOR_TYPE)};class a extends n.BasicVectorType{constructor(e){super({elementType:s.byteType,...e}),this._typeSymbols.add(t.BYTEVECTOR_TYPE)}struct_defaultValue(){return new Uint8Array(this.length)}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=r-t;if(n!==this.length)throw new Error(`Invalid deserialized vector length: expected ${this.length}, actual: ${n}`);const s=new Uint8Array(n);return s.set(e.slice(t,r)),s}struct_serializeToBytes(e,t,r){return t.set(e,r),r+this.length}struct_convertFromJson(e){const t=o.fromHexString(e);if(t.length!==this.length)throw new Error(`Invalid JSON vector length: expected ${this.length}, actual: ${t.length}`);return t}struct_convertToJson(e){return o.toHexString(e)}tree_convertToStruct(e){const t=new Uint8Array(this.length),r=e.getNodesAtDepth(this.getChunkDepth(),0,this.getMaxChunkCount());let n=0;if(this.length%32===0)for(let s=0;s<this.length;s+=32)t.set(r[n].root,s),n++;else{let e;for(e=0;e<this.length-32;e+=32)t.set(r[n].root,e),n++;t.set(r[n].root.subarray(0,this.length-e),e)}return t}}t.ByteVectorType=a},31083:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ContainerType=t.isContainerType=t.CONTAINER_TYPE=void 0;const n=r(75148),s=r(89945),i=r(56050),o=r(86297),a=r(87061),u=r(9691),l=r(99849),c=r(42349);t.CONTAINER_TYPE=Symbol.for("ssz/ContainerType"),t.isContainerType=function(e){return s.isTypeOf(e,t.CONTAINER_TYPE)};class h extends n.CompositeType{fields;fieldInfos;constructor(e){super(),this.fields={...e.fields},this._typeSymbols.add(t.CONTAINER_TYPE),this.fieldInfos=new Map;let r=0;for(const[t,s]of Object.entries(this.fields))this.fieldInfos.set(t,{isBasic:!n.isCompositeType(s),gIndexBitString:this.getGindexBitStringAtChunkIndex(r),gIndex:this.getGindexAtChunkIndex(r)}),r++}struct_defaultValue(){const e={};for(const[t,r]of Object.entries(this.fields))e[t]=r.struct_defaultValue();return e}struct_getSerializedLength(e){let t=0;for(const[r,n]of Object.entries(this.fields)){const s=n.getFixedSerializedLength();t+=null===s?n.struct_getSerializedLength(e[r])+4:s}return t}getMaxSerializedLength(){let e=0;for(const t of Object.values(this.fields)){const r=t.getFixedSerializedLength();e+=null===r?4+t.getMaxSerializedLength():r}return e}getMinSerializedLength(){let e=0;for(const t of Object.values(this.fields)){const r=t.getFixedSerializedLength();e+=null===r?4+t.getMinSerializedLength():r}return e}struct_assertValidValue(e){for(const[r,n]of Object.entries(this.fields))try{n.struct_assertValidValue(e[r])}catch(t){throw new Error(`Invalid field ${r}: ${t.message}`)}}struct_equals(e,t){return this.struct_assertValidValue(e),this.struct_assertValidValue(t),Object.entries(this.fields).every((([r,n])=>n.struct_equals(e[r],t[r])))}struct_clone(e){const t={};for(const[r,n]of Object.entries(this.fields))t[r]=n.struct_clone(e[r]);return t}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);let n=t,s=n;const i={},a=Object.values(this.fields).map((e=>e.getFixedSerializedLength())),u=[],l=new DataView(e.buffer,e.byteOffset),c=a.reduce(((e,r)=>null===r?(u.push(t+l.getUint32(e,!0)),e+4):e+r),t);if(u.push(r),c!==u[0])throw new Error("Not all variable bytes consumed");let h=0;for(const[T,[d,y]]of Object.entries(this.fields).entries())try{const t=a[T];if(null===t){if(u[h]>r)throw new Error("Offset out of bounds");if(u[h]>u[h+1])throw new Error("Offsets must be increasing");i[d]=y.struct_deserializeFromBytes(e,u[h],u[h+1]),h++,n+=4}else s=n+t,i[d]=y.struct_deserializeFromBytes(e,n,s),n=s}catch(_){throw new o.SszErrorPath(_,d)}if(u.length>1){if(h!==u.length-1)throw new Error("Not all variable bytes consumed");if(n!==u[0])throw new Error("Not all fixed bytes consumed")}else if(n!==r)throw new Error("Not all fixed bytes consumed");return i}struct_serializeToBytes(e,t,r){let n=r;for(const o of Object.values(this.fields)){const e=o.getFixedSerializedLength();n+=null===e?4:e}const s=new DataView(t.buffer,t.byteOffset+r);let i=r;for(const[o,a]of Object.entries(this.fields))a.hasVariableSerializedLength()?(s.setUint32(i-r,n-r,!0),i+=4,n=a.toBytes(e[o],t,n)):i=a.toBytes(e[o],t,i);return n}struct_getRootAtChunkIndex(e,t){const r=Object.keys(this.fields)[t];return this.fields[r].struct_hashTreeRoot(e[r])}struct_convertFromJson(e,t){if("object"!==typeof e)throw new Error("Invalid JSON container: expected Object");const r={};for(const[n,s]of Object.entries(this.fields)){const i=t&&t.case,o=a.toExpectedCase(n,i);if(void 0===e[o])throw new Error(`Invalid JSON container field: expected field ${o} is undefined`);r[n]=s.fromJson(e[o],t)}return r}struct_convertToJson(e,t){const r={},n=t&&t.case;for(const[s,i]of Object.entries(this.fields))r[a.toExpectedCase(s,n)]=i.toJson(e[s],t);return r}struct_convertToTree(e){return c.isTreeBacked(e)?e.tree.clone():new i.Tree(i.subtreeFillToContents(Object.entries(this.fields).map((([t,r])=>n.isCompositeType(r)?r.struct_convertToTree(e[t]).rootNode:u.basicTypeToLeafNode(r,e[t]))),this.getChunkDepth()))}struct_getPropertyNames(){return Object.keys(this.fields)}bytes_getVariableOffsets(e){const t=Object.values(this.fields),r=[];let n=0,s=0;const i=new DataView(e.buffer,e.byteOffset),o=[],a=[];let u=0;for(const[l,c]of t.entries()){const t=c.getFixedSerializedLength();if(null===t){const t=i.getUint32(n,!0);if(t>e.length)throw new Error("Offset out of bounds");a.push(t),n=s=n+4,u++}else s=n+t,o[l]=[n,s],n=s}a.push(e.length),u=0;for(const[l,c]of t.entries())if(c.hasVariableSerializedLength()){if(a[u]>a[u+1])throw new Error("Offsets must be increasing");r.push([a[u],a[u+1]]),u++}else r.push(o[l]);return r}tree_defaultNode(){return this._defaultNode||(this._defaultNode=i.subtreeFillToContents(Object.values(this.fields).map((e=>n.isCompositeType(e)?e.tree_defaultNode():i.zeroNode(0))),this.getChunkDepth())),this._defaultNode}tree_convertToStruct(e){const t={};for(const[r,n]of Object.entries(this.fields)){const s=this.fieldInfos.get(r);if(s.isBasic){const i=e.getRoot(s.gIndexBitString);t[r]=n.struct_deserializeFromBytes(i,0)}else{const i=n,o=e.getSubtree(s.gIndexBitString);t[r]=i.tree_convertToStruct(o)}}return t}tree_getSerializedLength(e){let t=0;for(const[r,n]of Object.entries(this.fields)){const s=n.getFixedSerializedLength();t+=null===s?n.tree_getSerializedLength(e.getSubtree(this.fieldInfos.get(r).gIndexBitString))+4:s}return t}tree_deserializeFromBytes(e,t,r){const n=this.tree_defaultValue(),s=this.bytes_getVariableOffsets(new Uint8Array(e.buffer,e.byteOffset+t,r-t));for(const[i,[o,a]]of Object.entries(this.fields).entries()){const[r,u]=s[i],{isBasic:l,gIndex:c}=this.fieldInfos.get(o);if(l){const s=new Uint8Array(e.buffer,e.byteOffset+t+r,u-r),i=new Uint8Array(32);i.set(s),n.setRoot(c,i)}else{const s=a;n.setSubtree(c,s.tree_deserializeFromBytes(e,t+r,t+u))}}return n}tree_serializeToBytes(e,t,r){let s=r;for(const n of Object.values(this.fields)){const e=n.getFixedSerializedLength();s+=null===e?4:e}const o=new DataView(t.buffer,t.byteOffset+r);let a=r;const u=Object.values(this.fields),l=e.getNodesAtDepth(this.getChunkDepth(),0,u.length);for(let c=0;c<u.length;c++){const e=u[c],h=l[c];if(n.isCompositeType(e))e.hasVariableSerializedLength()?(o.setUint32(a-r,s-r,!0),a+=4,s=e.tree_serializeToBytes(new i.Tree(h),t,s)):a=e.tree_serializeToBytes(new i.Tree(h),t,a);else{const r=e.struct_getSerializedLength();t.set(h.root.slice(0,r),a),a+=r}}return s}getPropertyGindex(e){const t=this.fieldInfos.get(e);if(!t)throw new Error(`Invalid container field name: ${String(e)}`);return t.gIndex}getPropertyType(e){const t=this.fields[e];if(!t)throw new Error(`Invalid container field name: ${String(e)}`);return t}tree_getPropertyNames(){return Object.keys(this.fields)}tree_getProperty(e,t){const r=this.fields[t],n=this.fieldInfos.get(t);if(n){if(n.isBasic){if(r.struct_deserializeFromHashObject){const t=e.getHashObject(n.gIndexBitString);return r.struct_deserializeFromHashObject(t,0)}const t=e.getRoot(n.gIndexBitString);return r.struct_deserializeFromBytes(t,0)}return e.getSubtree(n.gIndexBitString)}}tree_setProperty(e,t,r){const n=this.fields[t],s=this.fieldInfos.get(t);if(!s)throw new Error("Invalid container field name");if(s.isBasic){if(n.struct_serializeToHashObject){const t=l.newHashObject();return n.struct_serializeToHashObject(r,t,0),e.setHashObject(s.gIndexBitString,t),!0}const t=new Uint8Array(32);return n.struct_serializeToBytes(r,t,0),e.setRoot(s.gIndexBitString,t),!0}return e.setSubtree(s.gIndexBitString,r),!0}tree_deleteProperty(e,t){const r=this.fieldInfos.get(t);if(!r)throw new Error("Invalid container field name");const n=this.fields[t];if(r.isBasic)return this.tree_setProperty(e,t,n.struct_defaultValue());{const r=n;return this.tree_setProperty(e,t,r.tree_defaultValue())}}*tree_iterateValues(e){const t=i.iterateAtDepth(this.getChunkDepth(),BigInt(0),BigInt(this.getMaxChunkCount()))[Symbol.iterator]();for(const r of Object.values(this.fields)){const{value:s,done:i}=t.next();if(i)return;n.isCompositeType(r)?yield e.getSubtree(s):yield r.struct_deserializeFromBytes(s.root,0)}}*tree_readonlyIterateValues(e){const t=Object.values(this.fields),r=e.getNodesAtDepth(this.getChunkDepth(),0,t.length);for(let s=0;s<t.length;s++){const e=t[s],o=r[s];n.isCompositeType(e)?yield new i.Tree(o):yield e.struct_deserializeFromBytes(o.root,0)}}tree_getValues(e){const t=Object.values(this.fields),r=i.getGindicesAtDepth(this.getChunkDepth(),0,t.length),s=[];for(let i=0;i<t.length;i++){const o=t[i];n.isCompositeType(o)?s.push(e.getSubtree(r[i])):s.push(o.struct_deserializeFromBytes(e.getRoot(r[i]),0))}return s}tree_readonlyGetValues(e){const t=Object.values(this.fields),r=e.getNodesAtDepth(this.getChunkDepth(),0,t.length),s=[];for(let o=0;o<t.length;o++){const e=t[o],a=r[o];n.isCompositeType(e)?s.push(new i.Tree(a)):s.push(e.struct_deserializeFromBytes(a.root,0))}return s}hasVariableSerializedLength(){return Object.values(this.fields).some((e=>e.hasVariableSerializedLength()))}getFixedSerializedLength(){let e=0;for(const t of Object.values(this.fields)){const r=t.getFixedSerializedLength();if(null===r)return null;e+=r}return e}getMaxChunkCount(){return Object.keys(this.fields).length}tree_getLeafGindices(e,t=BigInt(1)){const r=[];for(const[n,s]of Object.entries(this.fields)){const{isBasic:o,gIndex:a,gIndexBitString:u}=this.fieldInfos.get(n),l=i.concatGindices([t,a]);if(o)r.push(l);else{const t=s;if(s.hasVariableSerializedLength()){if(!e)throw new Error("variable type requires tree argument to get leaves");r.push(...t.tree_getLeafGindices(e.getSubtree(u),l))}else r.push(...t.tree_getLeafGindices(void 0,l))}}return r}}t.ContainerType=h},6449:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.readonlyValuesListOfLeafNodeStruct=t.BranchNodeStruct=t.ContainerLeafNodeStructType=t.isContainerLeafNodeStructType=t.CONTAINER_LEAF_NODE_STRUCT_TYPE=void 0;const n=r(56050),s=r(42349),i=r(31083),o=r(89945);t.CONTAINER_LEAF_NODE_STRUCT_TYPE=Symbol.for("ssz/ContainerLeafNodeStructType"),t.isContainerLeafNodeStructType=function(e){return o.isTypeOf(e,t.CONTAINER_LEAF_NODE_STRUCT_TYPE)};class a extends i.ContainerType{constructor(e){super(e),this._typeSymbols.add(t.CONTAINER_LEAF_NODE_STRUCT_TYPE)}toFullTree(e){return super.struct_convertToTree(e)}createTreeBacked(e){const t=new s.ContainerLeafNodeStructTreeValue(this,e);return new Proxy(t,s.TreeProxyHandler)}struct_convertToTree(e){const t=new u(this,e);return new n.Tree(t)}tree_defaultNode(){return new u(this,this.struct_defaultValue())}tree_convertToStruct(e){return e.rootNode.value}tree_deserializeFromBytes(e,t,r){const s=this.struct_deserializeFromBytes(e,t,r),i=new u(this,s);return new n.Tree(i)}tree_serializeToBytes(e,t,r){const{value:n}=e.rootNode;return this.struct_serializeToBytes(n,t,r)}tree_getProperty(e,t){return e.rootNode.value[t]}tree_setProperty(e,t,r){const{value:n}=e.rootNode,s={...n,[t]:r};return e.rootNode=new u(this,s),!0}tree_deleteProperty(e,t){if(-1===Object.keys(this.fields).findIndex((e=>e===t)))throw new Error("Invalid container field name");const r=this.fields[t];return this.tree_setProperty(e,t,r.struct_defaultValue())}*tree_iterateValues(e){yield*Object.values(e.rootNode.value)}*tree_readonlyIterateValues(e){return yield*this.tree_iterateValues(e)}tree_getValues(e){return Array.from(Object.values(e.rootNode.value))}tree_readonlyGetValues(e){return this.tree_getValues(e)}}t.ContainerLeafNodeStructType=a;class u extends n.Node{type;value;constructor(e,t){super(),this.type=e,this.value=t}get rootHashObject(){if(null===this.h0){const e=this.type.toFullTree(this.value);super.applyHash(e.rootNode.rootHashObject)}return this}get root(){return n.hashObjectToUint8Array(this.rootHashObject)}isLeaf(){return!1}get left(){return this.type.toFullTree(this.value).rootNode.left}get right(){return this.type.toFullTree(this.value).rootNode.right}rebindLeft(e){return new n.BranchNode(e,this.right)}rebindRight(e){return new n.BranchNode(this.left,e)}}t.BranchNodeStruct=u,t.readonlyValuesListOfLeafNodeStruct=function(e){const t=e,{tree:r,type:n}=t,s=r.getNodesAtDepth(n.getChunkDepth(),0,n.tree_getChunkCount(r)),i=[];for(let o=0,a=s.length;o<a;o++){const e=s[o].value;if(void 0===e)throw Error("node is not a BranchNodeStruct");i.push(e)}return i}},96573:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),s(r(75148),t),s(r(51930),t),s(r(63595),t),s(r(4518),t),s(r(30723),t),s(r(31083),t),s(r(6449),t),s(r(4634),t),s(r(96056),t),s(r(64135),t),s(r(25662),t)},4634:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CompositeListType=t.Number64ListType=t.BasicListType=t.ListType=t.isListType=t.LIST_TYPE=t.LENGTH_GINDEX=void 0;const n=r(51930),s=r(75393),i=r(89945),o=r(59806),a=r(99849),u=r(56050),l=r(42349);t.LENGTH_GINDEX=BigInt(3),t.LIST_TYPE=Symbol.for("ssz/ListType"),t.isListType=function(e){return i.isTypeOf(e,t.LIST_TYPE)},t.ListType=function(e){return s.isNumber64UintType(e.elementType)?new h(e):s.isBasicType(e.elementType)?new c(e):new _(e)};class c extends n.BasicArrayType{limit;constructor(e){super(e),this.limit=e.limit,this._typeSymbols.add(t.LIST_TYPE)}struct_defaultValue(){return[]}struct_getLength(e){return e.length}getMaxLength(){return this.limit}getMinLength(){return 0}bytes_validate(e,t,r){if(super.bytes_validate(e,t,r),r-t>this.getMaxSerializedLength())throw new Error("Deserialized list length greater than limit")}struct_deserializeFromBytes(e,t,r){return this.bytes_validate(e,t,r),super.struct_deserializeFromBytes(e,t,r)}struct_getChunkCount(e){return Math.ceil(e.length*this.elementType.struct_getSerializedLength()/32)}struct_hashTreeRoot(e){return o.mixInLength(super.struct_hashTreeRoot(e),e.length)}struct_convertFromJson(e,t){if(!Array.isArray(e))throw new Error("Invalid JSON list: expected an Array");const r=this.limit;if(e.length>r)throw new Error(`Invalid JSON list: length ${e.length} greater than limit ${r}`);return super.struct_convertFromJson(e)}struct_convertToTree(e){if(l.isTreeBacked(e))return e.tree.clone();const t=super.struct_convertToTree(e);return this.tree_setLength(t,e.length),t}tree_defaultNode(){return this._defaultNode||(this._defaultNode=new u.BranchNode(u.zeroNode(super.getChunkDepth()),u.zeroNode(0))),this._defaultNode}tree_defaultValue(){return new u.Tree(this.tree_defaultNode())}tree_getLength(e){return s.number32Type.struct_deserializeFromBytes(e.getRoot(t.LENGTH_GINDEX),0)}tree_setLength(e,r){const n=new Uint8Array(32);s.number32Type.toBytes(r,n,0),e.setRoot(t.LENGTH_GINDEX,n)}tree_deserializeFromBytes(e,t,r){const n=(r-t)/this.elementType.struct_getSerializedLength();if(!Number.isSafeInteger(n))throw new Error("Deserialized list byte length must be divisible by element size");if(n>this.limit)throw new Error("Deserialized list length greater than limit");const s=super.tree_deserializeFromBytes(e,t,r);return this.tree_setLength(s,n),s}tree_getChunkCount(e){return Math.ceil(this.tree_getLength(e)*this.elementType.struct_getSerializedLength()/32)}getChunkDepth(){return super.getChunkDepth()+1}tree_setProperty(e,t,r){const n=this.tree_getLength(e);if(t>n)throw new Error("Invalid length index");return t==n?(this.tree_pushSingle(e,r),!0):this.tree_setValueAtIndex(e,t,r)}tree_deleteProperty(e,t){const r=this.tree_getLength(e);if(t>r)throw new Error("Invalid length index");return t==r?(this.tree_pop(e),!0):super.tree_deleteProperty(e,t)}tree_pushSingle(e,t){const r=this.tree_getLength(e),n=this.getChunkIndex(r)!=this.getChunkIndex(r+1);return this.tree_setValueAtIndex(e,r,t,n),this.tree_setLength(e,r+1),r+1}tree_push(e,...t){let r;for(const n of t)r=this.tree_pushSingle(e,n);return r||this.tree_getLength(e)}tree_pop(e){const t=this.tree_getLength(e),r=this.tree_getProperty(e,t-1);return super.tree_deleteProperty(e,t-1),this.tree_setLength(e,t-1),r}hasVariableSerializedLength(){return!0}getFixedSerializedLength(){return null}getMaxChunkCount(){return Math.ceil(this.limit*this.elementType.size()/32)}tree_getLeafGindices(e,r=BigInt(1)){if(!e)throw new Error("variable type requires tree argument to get leaves");const n=super.tree_getLeafGindices(e,r);return n.push(u.concatGindices([r,t.LENGTH_GINDEX])),n}}t.BasicListType=c;class h extends c{constructor(e){super(e)}tree_getValueAtIndex(e,t){const r=this.getGindexAtChunkIndex(this.getChunkIndex(t)),n=e.getHashObject(r),s=t%4*8;return this.elementType.struct_deserializeFromHashObject(n,s)}tree_setValueAtIndex(e,t,r,n=!1){const s=this.getGindexAtChunkIndex(this.getChunkIndex(t)),i=a.cloneHashObject(e.getHashObject(s)),o=t%4*8;return this.elementType.struct_serializeToHashObject(r,i,o),e.setHashObject(s,i,n),!0}tree_applyDeltaAtIndex(e,t,r){const n=this.getGindexAtChunkIndex(this.getChunkIndex(t)),s=t%4*8;let i=0;return e.setHashObjectFn(n,(e=>{const t=a.cloneHashObject(e);return i=this.elementType.struct_deserializeFromHashObject(t,s),i+=r,i<0&&(i=0),this.elementType.struct_serializeToHashObject(i,t,s),t})),i}tree_applyDeltaInBatch(e,t){const r=e.clone();for(const[n,s]of t.entries())this.tree_applyDeltaAtIndex(r,n,s);return e.rootNode=r.rootNode,[]}tree_newTreeFromDeltas(e,t){if(t.length!==this.tree_getLength(e))throw new Error(`Expect delta length ${this.tree_getLength(e)}, actual ${t.length}`);const r=this.getChunkDepth(),n=t.length;let s=0;const i=[],o=[],l=Math.ceil(n/4),c=e.getNodesAtDepth(r,0,l);for(let _=0;_<c.length;_++){const e=c[_],r=a.cloneHashObject(e);for(let i=0;i<4;i++){const e=4*s+i;if(e>=n)break;let a=this.elementType.struct_deserializeFromHashObject(r,8*i)+t[e];a<0&&(a=0),o.push(a),this.elementType.struct_serializeToHashObject(a,r,8*i)}i.push(new u.LeafNode(r)),s++}const h=u.subtreeFillToContents(i,r);return[new u.Tree(h),o]}}t.Number64ListType=h;class _ extends n.CompositeArrayType{limit;constructor(e){super(e),this.limit=e.limit,this._typeSymbols.add(t.LIST_TYPE)}hasVariableSerializedLength(){return!0}getFixedSerializedLength(){return null}getMaxChunkCount(){return this.limit}struct_defaultValue(){return[]}struct_getLength(e){return e.length}getMaxLength(){return this.limit}getMinLength(){return 0}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=super.struct_deserializeFromBytes(e,t,r);if(n.length>this.limit)throw new Error(`Deserialized list length greater than limit: ${n.length} ${this.limit}`);return n}struct_getChunkCount(e){return e.length}struct_hashTreeRoot(e){return o.mixInLength(super.struct_hashTreeRoot(e),e.length)}struct_convertFromJson(e,t){if(!Array.isArray(e))throw new Error("Invalid JSON list: expected an Array");const r=this.limit;if(e.length>r)throw new Error(`Invalid JSON list: length ${e.length} greater than limit ${r}`);return super.struct_convertFromJson(e,t)}tree_defaultNode(){return this._defaultNode||(this._defaultNode=new u.BranchNode(u.zeroNode(super.getChunkDepth()),u.zeroNode(0))),this._defaultNode}tree_defaultValue(){return new u.Tree(this.tree_defaultNode())}struct_convertToTree(e){if(l.isTreeBacked(e))return e.tree.clone();const t=super.struct_convertToTree(e);return this.tree_setLength(t,e.length),t}tree_getLength(e){return s.number32Type.struct_deserializeFromBytes(e.getRoot(t.LENGTH_GINDEX),0)}tree_setLength(e,r){const n=new Uint8Array(32);s.number32Type.struct_serializeToBytes(r,n,0),e.setRoot(t.LENGTH_GINDEX,n)}tree_deserializeFromBytes(e,t,r){const n=this.tree_defaultValue(),s=this.elementType.getFixedSerializedLength();if(null===s){const s=this.bytes_getVariableOffsets(new Uint8Array(e.buffer,e.byteOffset+t,r-t));if(s.length>this.limit)throw new Error("Deserialized list length greater than limit");for(let r=0;r<s.length;r++){const[i,o]=s[r];this.tree_setSubtreeAtChunkIndex(n,r,this.elementType.tree_deserializeFromBytes(e,t+i,t+o))}this.tree_setLength(n,s.length)}else{const i=s,o=(r-t)/i;if(!Number.isSafeInteger(o))throw new Error("Deserialized list byte length must be divisible by element size");if(o>this.limit)throw new Error("Deserialized list length greater than limit");for(let r=0;r<o;r++)this.tree_setSubtreeAtChunkIndex(n,r,this.elementType.tree_deserializeFromBytes(e,t+r*i,t+(r+1)*i),!0);this.tree_setLength(n,o)}return n}tree_getChunkCount(e){return this.tree_getLength(e)}getChunkDepth(){return super.getChunkDepth()+1}tree_setProperty(e,t,r){const n=this.tree_getLength(e);if(t>n)throw new Error("Invalid length index");return t==n?this.tree_pushSingle(e,r):this.tree_setSubtreeAtChunkIndex(e,t,r),!0}tree_deleteProperty(e,t){const r=this.tree_getLength(e);if(t>r)throw new Error("Invalid length index");return t==r?(this.tree_pop(e),!0):super.tree_deleteProperty(e,t)}tree_pushSingle(e,t){const r=this.tree_getLength(e);return this.tree_setSubtreeAtChunkIndex(e,r,t,!0),this.tree_setLength(e,r+1),r+1}tree_push(e,...t){let r;for(const n of t)r=this.tree_pushSingle(e,n);return r||this.tree_getLength(e)}tree_pop(e){const t=this.tree_getLength(e),r=this.tree_getProperty(e,t-1);return this.tree_setSubtreeAtChunkIndex(e,t-1,new u.Tree(u.zeroNode(0))),this.tree_setLength(e,t-1),r}tree_getLeafGindices(e,r=BigInt(1)){if(!e)throw new Error("variable type requires tree argument to get leaves");const n=super.tree_getLeafGindices(e,r);return n.push(u.concatGindices([r,t.LENGTH_GINDEX])),n}}t.CompositeListType=_},96056:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RootType=t.isRootType=t.ROOT_TYPE=void 0;const n=r(30723),s=r(89945),i=r(12603),o=r(53910);function a(e){if(e instanceof Uint8Array)return e;if(i.isTreeBacked(e))return e.tree.root;if(Array.isArray(e))return new Uint8Array(e);throw new Error("Unable to convert root to Uint8Array: not Uint8Array, tree-backed, or Array")}t.ROOT_TYPE=Symbol.for("ssz/RootType"),t.isRootType=function(e){return s.isTypeOf(e,t.ROOT_TYPE)};class u extends n.ByteVectorType{_expandedType;constructor(e){super({length:32}),this._expandedType=e.expandedType,this._typeSymbols.add(t.ROOT_TYPE)}get expandedType(){return"function"===typeof this._expandedType&&(this._expandedType=this._expandedType()),this._expandedType}struct_equals(e,t){return o.byteArrayEquals(a(e),a(t))}equals(e,t){return this.struct_equals(e,t)}}t.RootType=u},64135:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UnionType=t.isUnionType=t.UNION_TYPE=t.VALUE_GINDEX=t.SELECTOR_GINDEX=void 0;const n=r(56050),s=r(12603),i=r(9691),o=r(72110),a=r(16955),u=r(89945),l=r(75148);t.SELECTOR_GINDEX=BigInt(3),t.VALUE_GINDEX=BigInt(2),t.UNION_TYPE=Symbol.for("ssz/UnionType"),t.isUnionType=function(e){return u.isTypeOf(e,t.UNION_TYPE)};class c extends l.CompositeType{types;constructor(e){super(),this.types=[...e.types],this._typeSymbols.add(t.UNION_TYPE)}struct_assertValidValue(e){const{selector:t,value:r}=e;if(!(t>=0))throw new Error("Invalid selector "+t);if(null===r){if(0!==t)throw new Error(`Invalid selector ${t} for null value`);if(!o.isNoneType(this.types[t]))throw new Error("None value of Union type must have None as first type option")}else try{this.types[t].struct_assertValidValue(r)}catch(n){throw new Error(`Invalid value ${r} for selector ${t}`)}}struct_equals(e,t){return this.struct_assertValidValue(e),this.struct_assertValidValue(t),e.selector===t.selector&&this.types[e.selector].struct_equals(e.value,t.value)}struct_defaultValue(){return{selector:0,value:this.types[0].defaultValue()}}tree_defaultNode(){if(!this._defaultNode){const e=this.types[0],t=l.isCompositeType(e)?e.tree_defaultNode():n.zeroNode(0);this._defaultNode=new n.BranchNode(t,n.zeroNode(0))}return this._defaultNode}struct_clone(e){const{selector:t,value:r}=e;return{selector:t,value:this.types[t].struct_clone(r)}}struct_convertToJson(e,t){const{selector:r,value:n}=e;return{selector:r,value:this.types[r].struct_convertToJson(n,t)}}struct_convertFromJson(e,t){const{selector:r,value:n}=e;if(null===r||null!==r&&!(r>=0))throw new Error("Invalid JSON Union: invalid selector"+r);return{selector:r,value:this.types[r].struct_convertFromJson(n,t)}}struct_convertToTree(e){if(s.isTreeBacked(e))return e.tree.clone();const{selector:t,value:r}=e,o=this.types[t],u=l.isCompositeType(o)?o.struct_convertToTree(r).rootNode:i.basicTypeToLeafNode(o,r),c=i.basicTypeToLeafNode(a.number32Type,t);return new n.Tree(new n.BranchNode(u,c))}tree_convertToStruct(e){const r=a.number32Type.struct_deserializeFromBytes(e.getRoot(t.SELECTOR_GINDEX),0),n=this.types[r];let s;return s=l.isCompositeType(n)?n.tree_convertToStruct(e.getSubtree(t.VALUE_GINDEX)):n.struct_deserializeFromBytes(e.getRoot(t.VALUE_GINDEX),0),{selector:r,value:s}}struct_serializeToBytes(e,t,r){const{selector:n,value:s}=e,i=a.byteType.struct_serializeToBytes(n,t,r);return this.types[n].struct_serializeToBytes(s,t,i)}tree_serializeToBytes(e,r,n){const s=e.getRoot(t.SELECTOR_GINDEX);r.set(s.slice(0,1),n);const i=a.number32Type.struct_deserializeFromBytes(s,0),o=this.types[i];if(l.isCompositeType(o))return o.tree_serializeToBytes(e.getSubtree(t.VALUE_GINDEX),r,n+1);{const s=e.getRoot(t.VALUE_GINDEX),i=o.struct_getSerializedLength();return r.set(s.slice(0,i),n+1),n+1+i}}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=a.byteType.fromBytes(e,t);return{selector:n,value:this.types[n].struct_deserializeFromBytes(e,t+1,r)}}tree_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const s=a.byteType.fromBytes(e,t),o=this.types[s];let u;if(l.isCompositeType(o))u=o.tree_deserializeFromBytes(e,t+1,r).rootNode;else{const s=new Uint8Array(32);s.set(e.slice(t+1,r)),u=new n.LeafNode(s)}const c=i.basicTypeToLeafNode(a.number32Type,s);return new n.Tree(new n.BranchNode(u,c))}getMinSerializedLength(){return 1+Math.min(...this.types.map((e=>e.getMinSerializedLength())))}getMaxSerializedLength(){return 1+Math.max(...this.types.map((e=>e.getMaxSerializedLength())))}struct_getSerializedLength(e){const{selector:t,value:r}=e;return 1+this.types[t].struct_getSerializedLength(r)}tree_getSerializedLength(e){const r=this.getType(e);return l.isCompositeType(r)?1+r.tree_getSerializedLength(e.getSubtree(t.VALUE_GINDEX)):1+r.struct_getSerializedLength()}hasVariableSerializedLength(){return!0}getFixedSerializedLength(){return null}bytes_getVariableOffsets(e){throw new Error("Not applicable for Union")}getMaxChunkCount(){return 2}struct_getRootAtChunkIndex(e,t){if(0!==t&&1!==t)throw new Error(`Invalid index ${t} for Union type`);const{selector:r,value:n}=e;return 1===t?i.basicTypeToLeafNode(a.number32Type,r).root:this.types[r].struct_hashTreeRoot(n)}struct_getPropertyNames(){return["value","selector"]}tree_getPropertyNames(){return["value","selector"]}getPropertyGindex(e){switch(e){case"value":return t.VALUE_GINDEX;case"selector":return t.SELECTOR_GINDEX;default:throw new Error(`Invalid property ${String(e)} for Union type`)}}getPropertyType(e){throw new Error("Not applicable for Union type")}getPropertyTypeFromTree(e,t){switch(t){case"value":return this.getType(e);case"selector":return a.byteType;default:throw new Error(`Invalid property ${String(t)} for Union type`)}}tree_getProperty(e,r){switch(r){case"value":return e.getSubtree(t.VALUE_GINDEX);case"selector":return a.number32Type.struct_deserializeFromBytes(e.getRoot(t.SELECTOR_GINDEX),0);default:throw new Error(`Invalid property ${String(r)} for Union type`)}}tree_setProperty(e,r,n){if("value"!==r)throw new Error(`Invalid property ${String(r)} to set for Union type`);const s=this.getType(e);if(l.isCompositeType(s))e.setSubtree(t.VALUE_GINDEX,s.struct_convertToTree(n));else{const r=new Uint8Array(32);s.struct_serializeToBytes(n,r,0),e.setRoot(t.VALUE_GINDEX,r)}return!0}tree_deleteProperty(e,t){throw new Error("Method not implemented for Union type")}tree_iterateValues(e){throw new Error("Method not implemented for Union type")}tree_readonlyIterateValues(e){throw new Error("Method not implemented for Union type")}tree_getValues(e){throw new Error("Method not implemented for Union type")}tree_readonlyGetValues(e){throw new Error("Method not implemented for Union type")}tree_getLeafGindices(e,r=BigInt(1)){const s=[n.concatGindices([r,t.SELECTOR_GINDEX])],i=this.getType(e),o=n.concatGindices([r,t.VALUE_GINDEX]);return l.isCompositeType(i)?s.push(...i.tree_getLeafGindices(e.getSubtree(t.VALUE_GINDEX),o)):s.push(o),s}getType(e){const r=e.getRoot(t.SELECTOR_GINDEX),n=a.number32Type.struct_deserializeFromBytes(r,0);return this.types[n]}}t.UnionType=c},25662:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CompositeVectorType=t.BasicVectorType=t.VectorType=t.isVectorType=t.VECTOR_TYPE=void 0;const n=r(51930),s=r(75393),i=r(89945),o=r(56050);t.VECTOR_TYPE=Symbol.for("ssz/VectorType"),t.isVectorType=function(e){return i.isTypeOf(e,t.VECTOR_TYPE)},t.VectorType=function(e){return s.isBasicType(e.elementType)?new a(e):new u(e)};class a extends n.BasicArrayType{length;constructor(e){super(e),this.length=e.length,this._typeSymbols.add(t.VECTOR_TYPE)}struct_defaultValue(){return Array.from({length:this.length},(()=>this.elementType.struct_defaultValue()))}struct_getLength(e){return this.length}getMaxLength(){return this.length}getMinLength(){return this.length}bytes_validate(e,t,r){if(super.bytes_validate(e,t,r),r-t!==this.size(null))throw new Error("Incorrect deserialized vector length")}struct_deserializeFromBytes(e,t,r){return this.bytes_validate(e,t,r),super.struct_deserializeFromBytes(e,t,r)}struct_assertValidValue(e){const t=e.length,r=this.struct_getLength(e);if(t!==r)throw new Error(`Invalid vector length: expected ${r}, actual ${t}`);super.struct_assertValidValue(e)}struct_convertFromJson(e){if(!Array.isArray(e))throw new Error("Invalid JSON vector: expected an Array");const t=this.length;if(e.length!==t)throw new Error(`Invalid JSON vector length: expected ${t}, actual ${e.length}`);return super.struct_convertFromJson(e)}tree_defaultNode(){return this._defaultNode||(this._defaultNode=o.subtreeFillToLength(o.zeroNode(0),this.getChunkDepth(),this.getMaxChunkCount())),this._defaultNode}tree_defaultValue(){return new o.Tree(this.tree_defaultNode())}tree_getLength(e){return this.length}tree_deserializeFromBytes(e,t,r){if(r-t!==this.getFixedSerializedLength())throw new Error("Incorrect deserialized vector length");return super.tree_deserializeFromBytes(e,t,r)}tree_setProperty(e,t,r){if(t>=this.tree_getLength(e))throw new Error("Invalid array index");return super.tree_setProperty(e,t,r,!1)}hasVariableSerializedLength(){return!1}getFixedSerializedLength(){return this.length*this.elementType.size()}getMaxChunkCount(){return Math.ceil(this.length*this.elementType.size()/32)}}t.BasicVectorType=a;class u extends n.CompositeArrayType{length;constructor(e){super(e),this.length=e.length,this._typeSymbols.add(t.VECTOR_TYPE)}struct_defaultValue(){return Array.from({length:this.length},(()=>this.elementType.struct_defaultValue()))}struct_getLength(e){return this.length}getMaxLength(){return this.length}getMinLength(){return this.length}struct_deserializeFromBytes(e,t,r){this.bytes_validate(e,t,r);const n=super.struct_deserializeFromBytes(e,t,r);if(n.length!==this.length)throw new Error("Incorrect deserialized vector length");return n}struct_assertValidValue(e){const t=e.length,r=this.struct_getLength(e);if(t!==r)throw new Error(`Invalid vector length: expected ${r}, actual ${t}`);super.struct_assertValidValue(e)}struct_convertFromJson(e){if(!Array.isArray(e))throw new Error("Invalid JSON vector: expected an Array");const t=this.length;if(e.length!==t)throw new Error(`Invalid JSON vector length: expected ${t}, actual ${e.length}`);return super.struct_convertFromJson(e)}tree_defaultNode(){return this._defaultNode||(this._defaultNode=o.subtreeFillToLength(this.elementType.tree_defaultNode(),this.getChunkDepth(),this.length)),this._defaultNode}tree_defaultValue(){return new o.Tree(this.tree_defaultNode())}tree_getLength(e){return this.length}tree_deserializeFromBytes(e,t,r){const n=this.tree_defaultValue(),s=this.elementType.getFixedSerializedLength();if(null===s){const s=this.bytes_getVariableOffsets(new Uint8Array(e.buffer,e.byteOffset+t,r-t));if(s.length!==this.length)throw new Error("Incorrect deserialized vector length");for(let r=0;r<s.length;r++){const[i,o]=s[r];this.tree_setSubtreeAtChunkIndex(n,r,this.elementType.tree_deserializeFromBytes(e,t+i,t+o))}}else{const i=s,o=(r-t)/i;if(o!==this.length)throw new Error("Incorrect deserialized vector length");for(let r=0;r<o;r++)this.tree_setSubtreeAtChunkIndex(n,r,this.elementType.tree_deserializeFromBytes(e,t+r*i,t+(r+1)*i))}return n}setProperty(e,t,r){if(t>=this.tree_getLength(e))throw new Error("Invalid array index");return super.tree_setProperty(e,t,r,!1)}hasVariableSerializedLength(){return this.elementType.hasVariableSerializedLength()}getFixedSerializedLength(){const e=this.elementType.getFixedSerializedLength();return null===e?null:this.length*e}getMaxChunkCount(){return this.length}}t.CompositeVectorType=u},46334:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),s(r(75393),t),s(r(96573),t),s(r(89945),t)},89945:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Type=t.isTypeOf=void 0,t.isTypeOf=function(e,t){return e._typeSymbols.has(t)};t.Type=class{_typeSymbols;constructor(){this._typeSymbols=new Set}assertValidValue(e){return this.struct_assertValidValue(e)}defaultValue(){return this.struct_defaultValue()}clone(e){return this.struct_clone(e)}equals(e,t){return this.struct_equals(e,t)}size(e){return this.struct_getSerializedLength(e)}fromBytes(e,t,r){return this.struct_deserializeFromBytes(e,t,r)}deserialize(e){return this.fromBytes(e,0,e.length)}toBytes(e,t,r){return this.struct_serializeToBytes(e,t,r)}serialize(e){const t=new Uint8Array(this.size(e));return this.toBytes(e,t,0),t}hashTreeRoot(e){return this.struct_hashTreeRoot(e)}fromJson(e,t){return this.struct_convertFromJson(e,t)}toJson(e,t){return this.struct_convertToJson(e,t)}}},9691:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.basicTypeToLeafNode=void 0;const n=r(56050);t.basicTypeToLeafNode=function(e,t){const r=new Uint8Array(32);return e.toBytes(t,r,0),new n.LeafNode(r)}},18147:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bigIntPow=void 0,t.bigIntPow=function(e,t){if(t<0)throw new RangeError("Exponent must be positive");let r=BigInt(1);for(;t>0;t--)r*=e;return r}},53910:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getByteBits=t.byteArrayEquals=t.fromHexString=t.toHexString=void 0;const r=[];t.toHexString=function(e){let t="0x";for(const n of e)r[n]||(r[n]=n<16?"0"+n.toString(16):n.toString(16)),t+=r[n];return t},t.fromHexString=function(e){if("string"!==typeof e)throw new Error("Expected hex string to be a string");if(e.startsWith("0x")&&(e=e.slice(2)),e.length%2!==0)throw new Error("Expected an even number of characters");const t=[];for(let r=0,n=e.length;r<n;r+=2){const n=parseInt(e.slice(r,r+2),16);t.push(n)}return new Uint8Array(t)},t.byteArrayEquals=function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0},t.getByteBits=function(e,t){const r=e[t];return r?Array.prototype.map.call(r.toString(2).padStart(8,"0"),(e=>"1"===e)).reverse():[!1,!1,!1,!1,!1,!1,!1,!1]}},59806:function(e,t,r){"use strict";var n=r(48764).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.mixInLength=t.merkleize=t.hash=void 0;const s=r(99849),i=r(90234);function o(...e){return Uint8Array.from(s.hash(...e.map(n.from)))}t.hash=o,t.merkleize=function(e,t){return i.merkleize(Array.from(e).map(n.from),t)},t.mixInLength=function(e,t){const r=n.alloc(32);return r.writeUIntLE(t,0,6),o(e,r)}},26772:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BYTES_PER_LENGTH_PREFIX=t.BYTES_PER_CHUNK=void 0,t.BYTES_PER_CHUNK=32,t.BYTES_PER_LENGTH_PREFIX=4},86297:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderJsonPath=t.SszErrorPath=void 0;class r extends Error{jsonPath;rawMessage;constructor(e,t){const s=[t,...e instanceof r?e.jsonPath:[]],i=e instanceof r?e.rawMessage:e.message;super(`${n(s)}: ${i}`),this.jsonPath=s,this.rawMessage=i}}function n(e){let t="";for(const r of e)if("number"===typeof r)t+=`[${r}]`;else t+=t.length>0?`.${r}`:r;return t}t.SszErrorPath=r,t.renderJsonPath=n},99849:function(e,t,r){"use strict";var n=r(48764).Buffer,s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.newHashObject=t.cloneHashObject=t.hash=void 0;const i=s(r(97507));t.hash=function(...e){return i.default.digest(n.concat(e))};const o={h0:0,h1:0,h2:0,h3:0,h4:0,h5:0,h6:0,h7:0};t.cloneHashObject=function(e){return o.h0=e.h0,o.h1=e.h1,o.h2=e.h2,o.h3=e.h3,o.h4=e.h4,o.h5=e.h5,o.h6=e.h6,o.h7=e.h7,o},t.newHashObject=function(){return o.h0=0,o.h1=0,o.h2=0,o.h3=0,o.h4=0,o.h5=0,o.h6=0,o.h7=0,o}},87061:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.toExpectedCase=void 0;const s=n(r(97551));t.toExpectedCase=function(e,t="camel"){switch(t){case"camel":return s.default.camel(e);case"snake":return s.default.snake(e);default:return e}}},95269:function(e,t){"use strict";function r(e){const t=e.toString(2);return"0"===t?0:t.length}Object.defineProperty(t,"__esModule",{value:!0}),t.previousPowerOf2=t.nextPowerOf2=t.bitLength=void 0,t.bitLength=r,t.nextPowerOf2=function(e){return e<=0?1:Math.pow(2,r(e-1))},t.previousPowerOf2=function(e){return 0===e?1:Math.pow(2,r(e)-1)}},90234:function(e,t,r){"use strict";var n=r(48764).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.mixInLength=t.merkleize=void 0;const s=r(99849),i=r(95269),o=r(83988);t.merkleize=function(e,t=0){const r=i.bitLength(i.nextPowerOf2(t||e.length)-1);if(0==e.length)return o.zeroHashes[r];let a=0;for(;a<r;){e.length%2==1&&e.push(o.zeroHashes[a]);for(let t=0;t<e.length;t+=2){const r=s.hash(e[t],e[t+1]);e[t/2]=n.from(r.buffer,r.byteOffset,r.byteLength)}e.splice(e.length/2,e.length/2),a++}return e[0]},t.mixInLength=function(e,t){const r=n.alloc(32);r.writeUIntLE(t,0,6);const i=s.hash(e,r);return n.from(i.buffer,i.byteOffset,i.byteLength)}},4266:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTree=void 0,t.isTree=function(e){return Boolean(e.rootNode&&e.rootNode.isLeaf)}},83988:function(e,t,r){"use strict";var n=r(48764).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.zeroHashes=void 0;const s=r(26772),i=r(99849);t.zeroHashes=[n.alloc(s.BYTES_PER_CHUNK)];for(let o=0;o<52;o++){const e=i.hash(t.zeroHashes[o],t.zeroHashes[o]);t.zeroHashes.push(n.from(e.buffer,e.byteOffset,e.byteLength))}},97551:function(e){(function(){"use strict";var t=function(e,t){return t=t||"",e.replace(/(^|-)/g,"$1\\u"+t).replace(/,/g,"\\u"+t)},r=t("20-26,28-2F,3A-40,5B-60,7B-7E,A0-BF,D7,F7","00"),n="a-z"+t("DF-F6,F8-FF","00"),s="A-Z"+t("C0-D6,D8-DE","00"),i=function(e,t,i,o){return e=e||r,t=t||n,i=i||s,o=o||"A|An|And|As|At|But|By|En|For|If|In|Of|On|Or|The|To|Vs?\\.?|Via",{capitalize:new RegExp("(^|["+e+"])(["+t+"])","g"),pascal:new RegExp("(^|["+e+"])+(["+t+i+"])","g"),fill:new RegExp("["+e+"]+(.|$)","g"),sentence:new RegExp('(^\\s*|[\\?\\!\\.]+"?\\s+"?|,\\s+")(['+t+"])","g"),improper:new RegExp("\\b("+o+")\\b","g"),relax:new RegExp("([^"+i+"])(["+i+"]*)(["+i+"])(?=[^"+i+"]|$)","g"),upper:new RegExp("^[^"+t+"]+$"),hole:/[^\s]\s[^\s]/,apostrophe:/'/g,room:new RegExp("["+e+"]")}},o=i(),a={re:o,unicodes:t,regexps:i,types:[],up:String.prototype.toUpperCase,low:String.prototype.toLowerCase,cap:function(e){return a.up.call(e.charAt(0))+e.slice(1)},decap:function(e){return a.low.call(e.charAt(0))+e.slice(1)},deapostrophe:function(e){return e.replace(o.apostrophe,"")},fill:function(e,t,r){return null!=t&&(e=e.replace(o.fill,(function(e,r){return r?t+r:""}))),r&&(e=a.deapostrophe(e)),e},prep:function(e,t,r,n){if(e=null==e?"":e+"",!n&&o.upper.test(e)&&(e=a.low.call(e)),!t&&!o.hole.test(e)){var s=a.fill(e," ");o.hole.test(s)&&(e=s)}return r||o.room.test(e)||(e=e.replace(o.relax,a.relax)),e},relax:function(e,t,r,n){return t+" "+(r?r+" ":"")+n}},u={_:a,of:function(e){for(var t=0,r=a.types.length;t<r;t++)if(u[a.types[t]].apply(u,arguments)===e)return a.types[t]},flip:function(e){return e.replace(/\w/g,(function(e){return(e==a.up.call(e)?a.low:a.up).call(e)}))},random:function(e){return e.replace(/\w/g,(function(e){return(Math.round(Math.random())?a.up:a.low).call(e)}))},type:function(e,t){u[e]=t,a.types.push(e)}},l={lower:function(e,t,r){return a.fill(a.low.call(a.prep(e,t)),t,r)},snake:function(e){return u.lower(e,"_",!0)},constant:function(e){return u.upper(e,"_",!0)},camel:function(e){return a.decap(u.pascal(e))},kebab:function(e){return u.lower(e,"-",!0)},upper:function(e,t,r){return a.fill(a.up.call(a.prep(e,t,!1,!0)),t,r)},capital:function(e,t,r){return a.fill(a.prep(e).replace(o.capitalize,(function(e,t,r){return t+a.up.call(r)})),t,r)},header:function(e){return u.capital(e,"-",!0)},pascal:function(e){return a.fill(a.prep(e,!1,!0).replace(o.pascal,(function(e,t,r){return a.up.call(r)})),"",!0)},title:function(e){return u.capital(e).replace(o.improper,(function(e,t,r,n){return r>0&&r<n.lastIndexOf(" ")?a.low.call(e):e}))},sentence:function(e,t,r){return e=u.lower(e).replace(o.sentence,(function(e,t,r){return t+a.up.call(r)})),t&&t.forEach((function(t){e=e.replace(new RegExp("\\b"+u.lower(t)+"\\b","g"),a.cap)})),r&&r.forEach((function(t){e=e.replace(new RegExp("(\\b"+u.lower(t)+"\\. +)(\\w)"),(function(e,t,r){return t+a.low.call(r)}))})),e}};for(var c in l.squish=l.pascal,u.default=u,l)u.type(c,l[c]);var h="function"===typeof h?h:function(){};h(e.exports?e.exports=u:this.Case=u)}).call(this)}}]);