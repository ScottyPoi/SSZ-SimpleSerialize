{"pageProps":{"overviewPageData":{"id":"Composite_Objects","contentHtml":"<div align='center' id='Fixed%and%Variable%Size'>\n<h1>Serialize Composite Objects</h1>\n<br/>\n</div>\n<div align='start'\n<h5>For composite objects, the individual elements in the sequence are recursively serialized and packed together, separated by an offset of <code>4 bytes</code>, into <code>32 Byte</code> chunks, with the <code>length</code> (and <code>type</code> for Unions) \"mixed-in\".  The final serialized object is a concatenation of the fixed parts and the variable parts.</h5>\n<br/>\n<br/>\n</div>\n<div align='center'>\n<h3>Fixed-size and variable-size</h3>\n<br/>\n</div>\n<div align='start'>\n<h5>An object is considered <strong>fixed-size</strong> if it is:</h5>\n<ul>\n<li>a basic-type</li>\n<li>a fixed composition of fixed-size types</li>\n</ul>\n<h5>An object is considered <strong>variable-size</strong> if it is not fixed-size</h5>\n<br/>\n</div>\n<div align='center' id='Serialize%20and%20Deserialize'>\n<h3>Serialize and Deserialize</h3>\n<p>Representation of sequences can be thought of as two parts: the <code>fixed</code> part, and the <code>variable</code> part.</p>\n<p><code>Fixed-size</code> types do not have a <code>variable</code> part.</p>\n<br/>\n</div>\n<div align='start'>\n<ul>\n<li>\n<h4>Fixed part</h4>\n<ul>\n<li>\n<h5>For each of the elements in order, if the element type is:</h5>\n<ul>\n<li>\n<h6><code>fixed-size</code>:</h6>\n<ul>\n<li>Serialize the element and append it to the fixed-size part.\n<ul>\n<li>Lists of fixed-size elements effectively concatenate all elements,\nthe naming of the fixed-size part as whole does not apply to the list, but to element-type.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h6><code>variable-size</code>:</h6>\n<ul>\n<li>Append an offset to the fixed-size part, pointing to the start of the element data in the variable-size part.</li>\n<li>Serialize the element and append it to the variable size part.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h4>Variable part</h4>\n<ul>\n<li>For variable-size elements, the elements are serialized, tightly packed, then appended in order to the variable-size part.</li>\n</ul>\n</li>\n<li>\n<h4>Offsets</h4>\n<ul>\n<li>Within the fixed-size part offsets may be encoded to locate elements in the variable-size part.</li>\n<li>Offsets are 4 bytes each, typed as <code>uint32</code>, and can range from <code>[bytelen(fixed_part), bytelen(fixed_part) + bytelen(variable_part)]</code>. I.e. the fixed-part byte length is included as part of the offset.</li>\n<li>Each offset is pointing to the start of the serialized data, the index of the first byte of the element.</li>\n<li>For each offset, it MUST hold that <code>offsets[i-1] &#x3C;= offsets[i] &#x3C;= offsets[i+1]</code>, so that elements can be read from the byte stream following the offsets in order.</li>\n<li>It also MUST hold that the first offset aligns correctly:</li>\n<li>In a List this means that the first offset MUST be an exact multiple of the offset size, i.e. a multiple of 4.</li>\n<li>In a Container, this means that the first offset equals the fixed-size part of the container.</li>\n</ul>\n</li>\n</ul>\n","title":"Composite Objects","section":"Serialization","toc":["Fixed Size and Variable Size"],"prev":"Simple_Objects","next":"Deserialization"}},"__N_SSG":true}