_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[14],{TeaP:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return w}));var a=n("nKUr"),s=n("q1tI"),i=n.n(s),r=n("wx14"),o=n("zLVn"),c=n("TSYQ"),l=n.n(c),d=n("vUet"),f=["xl","lg","md","sm","xs"],u=i.a.forwardRef((function(e,t){var n=e.bsPrefix,a=e.className,s=e.noGutters,c=e.as,u=void 0===c?"div":c,h=Object(o.a)(e,["bsPrefix","className","noGutters","as"]),p=Object(d.a)(n,"row"),b=p+"-cols",m=[];return f.forEach((function(e){var t,n=h[e];delete h[e];var a="xs"!==e?"-"+e:"";null!=(t=null!=n&&"object"===typeof n?n.cols:n)&&m.push(""+b+a+"-"+t)})),i.a.createElement(u,Object(r.a)({ref:t},h,{className:l.a.apply(void 0,[a,p,s&&"no-gutters"].concat(m))}))}));u.displayName="Row",u.defaultProps={noGutters:!1};var h=u,p=n("IujW"),b=n.n(p),m=n("R9S9");function w(){return Object(a.jsxs)(m.a,{children:[Object(a.jsxs)(h,{children:[Object(a.jsx)("h2",{children:"Design"}),Object(a.jsx)("h4",{children:"The design choices for SSZ originate from the desire for:"})]}),Object(a.jsx)(h,{children:Object(a.jsx)(b.a,{children:"- **Efficiency and Elegance** in proof structures with binary trees, and a design that separates opinionated sparse structures from merkleization, learning from issues in ETH 1.0. - **Consistency** in a wide range of use-cases for minimal and efficient encoding and proofs in the core of ETH 2.0, as well as the layers being built on top. - **Flexibility and Transparency** for tracing proofs through history, building shallow variants of types, or proofs to linked data such as between ETH 2.0 shards. - **Stability of proof data** for stateless light clients and smart contracts. These can count on deterministic and stable locations of merkle tree leaves of interest. - **Fast data reads** by making full deserialization optional, data can be retrieved with a very minimal amount of operations, largely pre-computable at compile time."})})]})}},ZlfU:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/introduction",function(){return n("TeaP")}])}},[["ZlfU",0,1,2,4,3]]]);