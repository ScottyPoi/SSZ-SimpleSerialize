{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\pages\\\\test.jsx\";\nimport React from 'react';\nimport fs from 'fs';\nimport SplitSpecs from '../stories/splitspecs';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport toc from 'remark-toc';\nimport slug from 'remark-slug';\nimport Layout from '../components/layout';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport IsolateTOC from '../components/isolateTOC';\nimport SeparateSections from '../components/SeparateSections';\nimport TOCscroll from '../components/TOCscroll';\nexport async function getStaticProps() {\n  const SpecsData = fs.readFileSync('./eth2.0-specs/ssz/simple-serialize.md', 'utf8');\n  return {\n    props: {\n      SpecsData\n    }\n  };\n}\nexport default function Test({\n  SpecsData\n}) {\n  const [body, TOC] = SplitSpecs(SpecsData);\n  const topicToLevel = IsolateTOC(TOC);\n  const topics = Object.keys(topicToLevel);\n  const sections = SeparateSections(body);\n  const levelOne = [];\n  const levelTwo = [];\n  const levelThree = [];\n\n  const specsBody = sections => {\n    let content = [];\n\n    for (let i = 0; i < sections.length; i++) {\n      const sect = sections[i];\n      const topic = topics[i];\n      content.push( /*#__PURE__*/_jsxDEV(\"section\", {\n        id: topic,\n        children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          plugins: [gfm, toc, slug],\n          children: `${sections[i]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this));\n    }\n\n    return content;\n  };\n\n  const scrollspy = TOCscroll(topics, topicToLevel);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Row, {\n      children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Col, {\n        lg: 8,\n        children: specsBody(sections)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Col, {\n        sm: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Row, {\n      className: \"fixed-top\",\n      children: [/*#__PURE__*/_jsxDEV(ReactBootStrap.Col, {\n        lg: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Col, {\n        \"data-bs-spy\": \"scroll\",\n        \"data-bs-target\": \"#toc\",\n        \"data-bs-offset\": \"0\",\n        tabindex: \"0\",\n        sm: 4,\n        children: scrollspy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/pages/test.jsx"],"names":["React","fs","SplitSpecs","ReactMarkdown","gfm","toc","slug","Layout","ReactBootStrap","IsolateTOC","SeparateSections","TOCscroll","getStaticProps","SpecsData","readFileSync","props","Test","body","TOC","topicToLevel","topics","Object","keys","sections","levelOne","levelTwo","levelThree","specsBody","content","i","length","sect","topic","push","scrollspy"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport fs from 'fs';\r\nimport SplitSpecs from '../stories/splitspecs';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport toc from 'remark-toc';\r\nimport slug from 'remark-slug';\r\nimport Layout from '../components/layout';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport IsolateTOC from '../components/isolateTOC';\r\nimport SeparateSections from '../components/SeparateSections';\r\nimport TOCscroll from '../components/TOCscroll';\r\n\r\nexport async function getStaticProps() {\r\n  const SpecsData = fs.readFileSync('./eth2.0-specs/ssz/simple-serialize.md', 'utf8')\r\n  return {\r\n    props: {\r\n      SpecsData\r\n    }\r\n  }\r\n}\r\nexport default function Test({ SpecsData }) {\r\n    const [body, TOC] = SplitSpecs(SpecsData);\r\n    const topicToLevel = IsolateTOC(TOC);\r\n    const topics = Object.keys(topicToLevel);\r\n    const sections = SeparateSections(body);\r\n    const levelOne = [];\r\n    const levelTwo = [];\r\n    const levelThree = [];\r\n\r\n    const specsBody = (sections) => {\r\n      let content = [];\r\n      for (let i=0; i<sections.length; i++) {\r\n        const sect = sections[i];\r\n        const topic = topics[i];\r\n        content.push(\r\n          <section id={topic}>\r\n          <ReactBootStrap.Row></ReactBootStrap.Row>\r\n          <ReactMarkdown plugins={[gfm, toc, slug]}>{`${sections[i]}`}</ReactMarkdown>\r\n          </section>\r\n        )}\r\n      return content \r\n    };\r\n\r\n    const scrollspy = TOCscroll(topics, topicToLevel);\r\n\r\n    return (\r\n                <Layout>\r\n                  <ReactBootStrap.Row>\r\n                    <ReactBootStrap.Col lg={8}>\r\n                      {specsBody(sections)}\r\n                    </ReactBootStrap.Col>\r\n                    <ReactBootStrap.Col sm={4}>\r\n                    </ReactBootStrap.Col>\r\n                    </ReactBootStrap.Row>\r\n                    <ReactBootStrap.Row className=\"fixed-top\">\r\n                    <ReactBootStrap.Col lg={8}>\r\n                    </ReactBootStrap.Col>\r\n                    <ReactBootStrap.Col data-bs-spy=\"scroll\" data-bs-target=\"#toc\" data-bs-offset=\"0\" tabindex=\"0\" sm={4}>\r\n                      {scrollspy}\r\n                    </ReactBootStrap.Col>\r\n                  </ReactBootStrap.Row>\r\n                   \r\n                </Layout>\r\n            )\r\n}"]},"metadata":{},"sourceType":"module"}