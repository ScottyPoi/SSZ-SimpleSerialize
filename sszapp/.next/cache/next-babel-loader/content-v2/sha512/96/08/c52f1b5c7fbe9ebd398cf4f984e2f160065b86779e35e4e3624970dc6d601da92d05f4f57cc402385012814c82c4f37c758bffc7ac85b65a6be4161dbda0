{"ast":null,"code":"export default function IsolateTOC(toc) {\n  var text = toc; // Isolate text between doctoc comments\n\n  var firstSplit = text.split(\"<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\");\n  var secondSplit = firstSplit[1].split(\"<!-- END doctoc generated TOC please keep comment here to allow auto update -->\");\n  var table = secondSplit[0]; // separate by line and filter out empty lines.  \n  // save a list of TOC titles clean, and a list of TOC titles with markdown formatting symbols\n\n  var tableByLines = table.split('\\n');\n  var tableByLinesNoEmpties = tableByLines.filter(function (line) {\n    return line !== \"\" && line !== \"\\r\";\n  });\n  var tblneAsString = \"\".concat(tableByLinesNoEmpties);\n  var removedSeparaters = tblneAsString.replace(/ /g, \"\").replace(/,/g, \"\").replace(/-/g, \"\").replace(/]/g, '').replace(/\\[/g, \"\").replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g, \"\");\n  var removedSeparatersWithLevels = tblneAsString.replace(/,/g, \"\").replace(/]/g, '').replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g, \"\");\n  var cleanList = removedSeparaters.split(',');\n  var cleanListWithLevels = removedSeparatersWithLevels.split(',');\n  cleanList.pop();\n  cleanListWithLevels.pop(); // save a dictionary pairing clean title with title with formatting levels\n\n  var topicToTWL = {};\n\n  for (var i = 0; i < cleanList.length; i += 2) {\n    var topic = cleanList[i];\n    var TWL = cleanListWithLevels[i];\n    topicToTWL[topic] = TWL;\n  }\n\n  ; // return a dictionary pairing clean title with className for scrollspy link\n\n  var topicToLevel = {};\n  Object.keys(topicToTWL).map(function (topic) {\n    topicToLevel[topic] = topicToTWL[topic][0] === \"-\" ? \"Scrollspy1\" : topicToTWL[topic][2] === \"-\" ? \"Scrollspy2\" : topicToTWL[topic][4] === \"-\" ? \"Scrollspy3\" : 4;\n  });\n  return topicToLevel;\n}","map":null,"metadata":{},"sourceType":"module"}