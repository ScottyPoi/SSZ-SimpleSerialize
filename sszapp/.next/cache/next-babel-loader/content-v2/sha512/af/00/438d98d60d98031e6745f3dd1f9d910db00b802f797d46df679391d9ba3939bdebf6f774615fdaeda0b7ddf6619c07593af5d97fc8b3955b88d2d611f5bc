{"ast":null,"code":"import React from 'react';\nexport default function IsolateTOC(toc) {\n  var text = toc; // Isolate text between doctoc comments\n\n  var firstSplit = text.split(\"<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\");\n  var secondSplit = firstSplit[1].split(\"<!-- END doctoc generated TOC please keep comment here to allow auto update -->\");\n  var table = secondSplit[0]; // separate by line and filter out empty lines.  \n\n  var tableByLines = table.split('\\n');\n  var tableByLinesNoEmpties = tableByLines.filter(function (line) {\n    return line !== \"\" && line !== \"\\r\";\n  });\n  var tblneAsString = \"\".concat(tableByLinesNoEmpties);\n  var removedSeparaters = tblneAsString.replace(/ /g, \"\").replace(/,/g, \"\").replace(/-/g, \"\").replace(/]/g, '').replace(/\\[/g, \"\").replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g, \"\");\n  var removedSeparatersWithLevels = tblneAsString.replace(/,/g, \"\").replace(/]/g, '').replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g, \"\");\n  var cleanList = removedSeparaters.split(',');\n  var cleanListWithLevels = removedSeparatersWithLevels.split(',');\n  cleanList.pop();\n  cleanListWithLevels.pop();\n  console.log(\"cleanList looks like: \".concat(cleanList));\n  console.log(\"cleanListWithLevels looks like: \".concat(cleanListWithLevels));\n  var topicToTWL = {};\n\n  for (var i = 0; i < cleanList.length; i += 2) {\n    var topic = cleanList[i];\n    var TWL = cleanListWithLevels[i];\n    topicToTWL[topic] = TWL;\n  }\n\n  ; // const topicWithLevelsToLink = {}\n  // for (let i=0; i<cleanListWithLevels.length; i+=2) {\n  //   let topic = cleanListWithLevels[i];\n  //   let topicWithLevels = cleanListWithLevels[i+1];\n  //   topicWithLevelsToLink[topic] = topicWithLevels;\n  // };\n  // const topicToTopicWithLevels = {}\n  // for (let i=0; i<Object.keys(topicToLink).length; i++) {\n  //     topicToTopicWithLevels[Object.keys(topicToLink)[i]] = Object.keys(topicWithLevelsToLink)[i];\n  // }\n\n  var topicToLevel = {};\n  Object.keys(topicToTWL).map(function (topic) {\n    topicToLevel[topic] = topicToTWL[topic][0] === \"-\" ? \"Scrollspy1\" : topicToTopicWithLevels[topic][2] === \"-\" ? \"Scrollspy2\" : topicToTopicWithLevels[topic][4] === \"-\" ? \"Scrollspy3\" : 4;\n  });\n  return topicToLevel;\n}\n_c = IsolateTOC;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsolateTOC\");","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/components/isolateTOC.jsx"],"names":["React","IsolateTOC","toc","text","firstSplit","split","secondSplit","table","tableByLines","tableByLinesNoEmpties","filter","line","tblneAsString","removedSeparaters","replace","removedSeparatersWithLevels","cleanList","cleanListWithLevels","pop","console","log","topicToTWL","i","length","topic","TWL","topicToLevel","Object","keys","map","topicToTopicWithLevels"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function IsolateTOC(toc) {\r\n\r\n    const text = toc;\r\n\r\n// Isolate text between doctoc comments\r\n\r\n    const firstSplit = text.split(\"<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\")\r\n    const secondSplit = firstSplit[1].split(\"<!-- END doctoc generated TOC please keep comment here to allow auto update -->\")\r\n    const table = secondSplit[0]\r\n\r\n// separate by line and filter out empty lines.  \r\n\r\n    const tableByLines = table.split('\\n')\r\n    const tableByLinesNoEmpties = tableByLines.filter(line => line !== \"\" && line !== \"\\r\")\r\n    const tblneAsString = `${tableByLinesNoEmpties}`\r\n    const removedSeparaters = tblneAsString.replace(/ /g, \"\").replace(/,/g, \"\").replace(/-/g, \"\").replace(/]/g, '').replace(/\\[/g, \"\").replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g,\"\")\r\n    const removedSeparatersWithLevels = tblneAsString.replace(/,/g, \"\").replace(/]/g, '').replace(/\\)/g, \"(\").replace(/\\(/g, \",\").replace(/\\`/g,\"\")\r\n    const cleanList = removedSeparaters.split(',');\r\n    const cleanListWithLevels = removedSeparatersWithLevels.split(',');\r\n\r\n    cleanList.pop();\r\n    cleanListWithLevels.pop();\r\n\r\n    console.log(`cleanList looks like: ${cleanList}`);\r\n    console.log(`cleanListWithLevels looks like: ${cleanListWithLevels}`);\r\n\r\n    const topicToTWL = {}\r\n    for (let i=0; i<cleanList.length; i+=2) {\r\n      let topic = cleanList[i];\r\n      let TWL = cleanListWithLevels[i];\r\n      topicToTWL[topic] = TWL;\r\n    };\r\n    \r\n    // const topicWithLevelsToLink = {}\r\n    // for (let i=0; i<cleanListWithLevels.length; i+=2) {\r\n    //   let topic = cleanListWithLevels[i];\r\n    //   let topicWithLevels = cleanListWithLevels[i+1];\r\n    //   topicWithLevelsToLink[topic] = topicWithLevels;\r\n    // };\r\n\r\n    // const topicToTopicWithLevels = {}\r\n    // for (let i=0; i<Object.keys(topicToLink).length; i++) {\r\n    //     topicToTopicWithLevels[Object.keys(topicToLink)[i]] = Object.keys(topicWithLevelsToLink)[i];\r\n    // }\r\n    \r\n    const topicToLevel = {};\r\n    Object.keys(topicToTWL).map((topic) => {\r\n        topicToLevel[topic] = topicToTWL[topic][0] === \"-\"\r\n            ? \"Scrollspy1\"\r\n            : topicToTopicWithLevels[topic][2] === \"-\"\r\n            ? \"Scrollspy2\"\r\n            : topicToTopicWithLevels[topic][4] === \"-\"\r\n            ? `Scrollspy3`\r\n            : 4\r\n    })\r\n\r\n    return topicToLevel\r\n\r\n}"]},"metadata":{},"sourceType":"module"}