{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport SSZ from '../eth2.0-specs/ssz/simple-serialize.md';\nimport SplitSpecs from '../stories/splitspecs';\nexport default function Spork() {\n  var body = Split();\n  console.log(body);\n  return /*#__PURE__*/_jsx(SSZ, {});\n}\nexport function Split() {\n  return _Split.apply(this, arguments);\n}\n\nfunction _Split() {\n  _Split = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return SplitSpecs(SSZ);\n\n          case 2:\n            body = _context.sent;\n            return _context.abrupt(\"return\", body);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Split.apply(this, arguments);\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}