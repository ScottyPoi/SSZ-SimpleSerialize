{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\stories\\\\Node.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport './Node.module.css';\nimport PropTypes from 'prop-types';\nconst {\n  0: on,\n  1: setOn\n} = useState(true);\nexport const Node = (_ref) => {\n  let {\n    label,\n    backgroundColor\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"backgroundColor\"]);\n\n  const size = props.size == 'small' ? 'small' : 'large';\n  let lit = on ? 'on' : 'off';\n  return _jsxDEV(\"button\", _objectSpread(_objectSpread({}, props), {}, {\n    className: `node node-${size}`,\n    style: backgroundColor && {\n      backgroundColor\n    },\n    children: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\nNode.defaultProps = {\n  label: \"Foobarbaz\",\n  backgroundColor: null,\n  size: 'small'\n};\nNode.propTypes = {\n  /**\r\n  * What does the Button say?\r\n  */\n  label: PropTypes.string,\n\n  /**\r\n  * What background color to use\r\n  */\n  backgroundColor: PropTypes.string,\n\n  /**\r\n  * Is the Button big or small?\r\n  */\n  size: PropTypes.oneOf(['small', 'large'])\n};","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/stories/Node.jsx"],"names":["React","useState","PropTypes","on","setOn","Node","label","backgroundColor","props","size","lit","defaultProps","propTypes","string","oneOf"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,MAAM;AAAA,KAAEC,EAAF;AAAA,KAAMC;AAAN,IAAgBH,QAAQ,CAAC,IAAD,CAA9B;AAMA,OAAO,MAAMI,IAAI,GAAG,UAA0C;AAAA,MAAxC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAwC;AAAA,MAAZC,KAAY;;AAC1D,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAc,OAAd,GAAwB,OAAxB,GAAkC,OAA/C;AACA,MAAIC,GAAG,GAAGP,EAAE,GAAG,IAAH,GAAU,KAAtB;AACA,SACI,kDACQK,KADR;AAEI,IAAA,SAAS,EAAG,aAAYC,IAAK,EAFjC;AAGI,IAAA,KAAK,EAAEF,eAAe,IAAI;AAACA,MAAAA;AAAD,KAH9B;AAAA,cAKKD;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZM;AAiBPD,IAAI,CAACM,YAAL,GAAoB;AAChBL,EAAAA,KAAK,EAAE,WADS;AAEhBC,EAAAA,eAAe,EAAE,IAFD;AAGhBE,EAAAA,IAAI,EAAE;AAHU,CAApB;AAMAJ,IAAI,CAACO,SAAL,GAAiB;AACb;AACJ;AACA;AACIN,EAAAA,KAAK,EAAEJ,SAAS,CAACW,MAJJ;;AAKb;AACJ;AACA;AACIN,EAAAA,eAAe,EAAEL,SAAS,CAACW,MARd;;AASb;AACJ;AACA;AACIJ,EAAAA,IAAI,EAAEP,SAAS,CAACY,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB;AAZO,CAAjB","sourcesContent":["import React, { useState } from 'react';\r\nimport './Node.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst [ on, setOn ] = useState(true);\r\n\r\n\r\n\r\n\r\n\r\nexport const Node = ( {label, backgroundColor, ...props} ) => {\r\n    const size = props.size == 'small' ? 'small' : 'large';\r\n    let lit = on ? 'on' : 'off';\r\n    return (\r\n        <button\r\n            {...props}\r\n            className={`node node-${size}`}\r\n            style={backgroundColor && {backgroundColor}}\r\n        >\r\n            {label}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nNode.defaultProps = {\r\n    label: \"Foobarbaz\",\r\n    backgroundColor: null,\r\n    size: 'small'\r\n};\r\n\r\nNode.propTypes = {\r\n    /**\r\n   * What does the Button say?\r\n   */\r\n    label: PropTypes.string,\r\n    /**\r\n   * What background color to use\r\n   */\r\n    backgroundColor: PropTypes.string,\r\n    /**\r\n   * Is the Button big or small?\r\n   */\r\n    size: PropTypes.oneOf(['small', 'large']),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}