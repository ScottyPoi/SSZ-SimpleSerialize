{"ast":null,"code":"import _defineProperty from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\stories\\\\Node.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './Node.css';\nimport PropTypes from 'prop-types';\nexport var Node = function Node(_ref) {\n  var label = _ref.label,\n      backgroundColor = _ref.backgroundColor,\n      props = _objectWithoutProperties(_ref, [\"label\", \"backgroundColor\"]);\n\n  var size = props.size == 'small' ? 'small' : 'large';\n  return _jsxDEV(\"button\", _objectSpread(_objectSpread({}, props), {}, {\n    className: \"node node-\".concat(size),\n    style: {\n      backgroundColor: backgroundColor\n    },\n    children: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n_c = Node;\nNode.defaultProps = {\n  label: \"Foobarbaz\",\n  backgroundColor: null,\n  size: 'small'\n};\nNode.PropTypes = {\n  label: PropTypes.string,\n\n  /**\r\n  * What background color to use\r\n  */\n  backgroundColor: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'large'])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/stories/Node.jsx"],"names":["React","PropTypes","Node","label","backgroundColor","props","size","defaultProps","string","oneOf"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA0C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAC1D,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAc,OAAd,GAAwB,OAAxB,GAAkC,OAA/C;AACA,SACI,kDACQD,KADR;AAEI,IAAA,SAAS,sBAAeC,IAAf,CAFb;AAGI,IAAA,KAAK,EAAE;AAACF,MAAAA,eAAe,EAAfA;AAAD,KAHX;AAAA,cAKKD;AALL;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAXM;KAAMD,I;AAgBbA,IAAI,CAACK,YAAL,GAAoB;AAChBJ,EAAAA,KAAK,EAAE,WADS;AAEhBC,EAAAA,eAAe,EAAE,IAFD;AAGhBE,EAAAA,IAAI,EAAE;AAHU,CAApB;AAMAJ,IAAI,CAACD,SAAL,GAAiB;AAEbE,EAAAA,KAAK,EAAEF,SAAS,CAACO,MAFJ;;AAGb;AACJ;AACA;AACIJ,EAAAA,eAAe,EAAEH,SAAS,CAACO,MANd;AAObF,EAAAA,IAAI,EAAEL,SAAS,CAACQ,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB;AAPO,CAAjB","sourcesContent":["import React from 'react';\r\nimport './Node.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Node = ( {label, backgroundColor, ...props} ) => {\r\n    const size = props.size == 'small' ? 'small' : 'large'\r\n    return (\r\n        <button\r\n            {...props}\r\n            className={`node node-${size}`}\r\n            style={{backgroundColor}}\r\n        >\r\n            {label}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nNode.defaultProps = {\r\n    label: \"Foobarbaz\",\r\n    backgroundColor: null,\r\n    size: 'small'\r\n}\r\n\r\nNode.PropTypes = {\r\n\r\n    label: PropTypes.string,\r\n    /**\r\n   * What background color to use\r\n   */\r\n    backgroundColor: PropTypes.string,\r\n    size: PropTypes.oneOf(['small', 'large'])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}