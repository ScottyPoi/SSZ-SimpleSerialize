{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyzam\\\\Documents\\\\GitHub\\\\SSZ-SimpleSerialize\\\\sszapp\\\\pages\\\\test.jsx\";\nimport React from 'react';\nimport SSZ from '../eth2.0-specs/ssz/simple-serialize.md';\n\nconst SplitSpecs = document => {\n  const split = document.toString().split(\"<!-- /TOC -->\");\n  const TOC = split[0];\n  const specs = split[1];\n  console.log(typeof TOC);\n  console.log(specs);\n  return specs;\n};\n\nconst specs = SplitSpecs(SSZ);\nexport default function Test() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: specs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/kyzam/Documents/GitHub/SSZ-SimpleSerialize/sszapp/pages/test.jsx"],"names":["React","SSZ","SplitSpecs","document","split","toString","TOC","specs","console","log","Test"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,yCAAhB;;AAEA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAE7B,QAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAT,GAAoBD,KAApB,CAA0B,eAA1B,CAAd;AAEA,QAAME,GAAG,GAAGF,KAAK,CAAC,CAAD,CAAjB;AACA,QAAMG,KAAK,GAAGH,KAAK,CAAC,CAAD,CAAnB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,GAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SAAOA,KAAP;AAEH,CAZD;;AAcA,MAAMA,KAAK,GAAGL,UAAU,CAACD,GAAD,CAAxB;AAIA,eAAe,SAASS,IAAT,GAAgB;AAC3B,sBAAO;AAAA,cACFH;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGC","sourcesContent":["import React from 'react';\r\nimport SSZ from '../eth2.0-specs/ssz/simple-serialize.md';\r\n\r\nconst SplitSpecs = (document) => {\r\n    \r\n    const split = document.toString().split(\"<!-- /TOC -->\")\r\n    \r\n    const TOC = split[0];\r\n    const specs = split[1];\r\n\r\n    console.log(typeof(TOC));\r\n    console.log(specs)\r\n\r\n    return specs\r\n\r\n};\r\n\r\nconst specs = SplitSpecs(SSZ);\r\n\r\n\r\n\r\nexport default function Test() {\r\n    return <div>\r\n        {specs}\r\n    </div>\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}